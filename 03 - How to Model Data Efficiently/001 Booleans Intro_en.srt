1
00:00:00,180 --> 00:00:00,960
Welcome back.

2
00:00:00,990 --> 00:00:05,460
So far we've only seen one of the primitive types we've been working with, number.

3
00:00:05,460 --> 00:00:10,350
We talked about numbers, how they work, different numeric operators who made variables with numbers,

4
00:00:10,350 --> 00:00:14,250
but there are multiple other primitive types and we're going to address them.

5
00:00:14,250 --> 00:00:17,400
So first of all, we're going to talk about Boolean very quickly.

6
00:00:17,400 --> 00:00:23,580
It's a simple, short and easy primitive type to discuss and then we'll come back to Strings in the

7
00:00:23,580 --> 00:00:24,330
next video.

8
00:00:24,330 --> 00:00:27,510
So Booleans are simply true or false values.

9
00:00:27,510 --> 00:00:33,120
There's only two options if you're using a boolean, true or false, they are very efficient as far

10
00:00:33,120 --> 00:00:38,130
as how much space they take up because there's only two options and we use them all the time.

11
00:00:38,130 --> 00:00:40,860
And the main reason for that will become clearer later on.

12
00:00:40,860 --> 00:00:47,490
And once we talk about logic and how we write logic using JavaScript, so true or false, we can make

13
00:00:47,490 --> 00:00:48,660
a variable with them.

14
00:00:48,660 --> 00:00:49,260
That's it.

15
00:00:49,260 --> 00:00:49,980
To make a boolean.

16
00:00:49,980 --> 00:00:50,820
It looks like this.

17
00:00:50,820 --> 00:00:52,710
If you want to do, you can go ahead and type.

18
00:00:52,710 --> 00:00:56,130
True, that is a boolean and you can type false.

19
00:00:56,250 --> 00:00:57,120
That's it.

20
00:00:57,150 --> 00:01:00,270
No quotes around them if you're familiar with strings.

21
00:01:00,270 --> 00:01:02,340
This is not a boolean.

22
00:01:04,050 --> 00:01:06,990
It says the word true, but it is not the boolean true.

23
00:01:07,020 --> 00:01:07,920
This is special.

24
00:01:07,920 --> 00:01:09,050
As you can see here.

25
00:01:09,060 --> 00:01:13,260
Just like with numbers, we can store boolean values in a variable.

26
00:01:13,290 --> 00:01:15,090
So here are three examples.

27
00:01:15,120 --> 00:01:17,910
Let is logged in equals true.

28
00:01:18,270 --> 00:01:23,700
It starts out as true and potentially it would be false later on if someone logs out.

29
00:01:23,940 --> 00:01:26,190
We have let game over equals false.

30
00:01:26,190 --> 00:01:27,540
So the game starts.

31
00:01:27,570 --> 00:01:28,870
Game over is false.

32
00:01:28,890 --> 00:01:30,060
It's not over.

33
00:01:30,270 --> 00:01:33,270
And then the user dies or does something bad in the game.

34
00:01:33,270 --> 00:01:35,130
And so game over becomes true.

35
00:01:35,340 --> 00:01:38,190
And then const is water wet equals true.

36
00:01:38,240 --> 00:01:42,720
I use const here because is water wet should not change.

37
00:01:42,750 --> 00:01:45,790
Hopefully water should always be wet and that's it.

38
00:01:45,810 --> 00:01:47,690
We can make a variable just like that.

39
00:01:47,700 --> 00:01:49,440
So we'll do one example.

40
00:01:49,470 --> 00:01:50,440
Keep it short.

41
00:01:50,460 --> 00:01:54,540
Let's do is hungry and I'll set that to true.

42
00:01:55,510 --> 00:01:57,400
And we look at it as hungry.

43
00:01:58,820 --> 00:01:59,610
It's true.

44
00:01:59,630 --> 00:02:00,470
Surprise.

45
00:02:00,680 --> 00:02:03,440
And we're using it so we could set it to false.

46
00:02:03,860 --> 00:02:04,700
There we go.

47
00:02:04,850 --> 00:02:07,280
The only other thing I'll talk about in this video.

48
00:02:07,310 --> 00:02:12,750
A very important topic in JavaScript or an important idea is that variables can change type.

49
00:02:12,770 --> 00:02:17,720
If you have experience with any other programming language, well, maybe not any other, but many other

50
00:02:17,720 --> 00:02:18,530
languages.

51
00:02:18,530 --> 00:02:23,420
When you declare a variable and you make it a number, it needs to stay a number.

52
00:02:23,450 --> 00:02:26,050
In JavaScript, there is no restriction on that.

53
00:02:26,060 --> 00:02:28,980
We can change a number to a boolean at any point.

54
00:02:29,000 --> 00:02:31,310
That's not saying it's a good idea at all.

55
00:02:31,340 --> 00:02:36,800
In fact, it's one of the things a lot of people don't like about JavaScript, and it's why things like

56
00:02:36,800 --> 00:02:37,820
TypeScript exist.

57
00:02:37,820 --> 00:02:42,680
If you're familiar with TypeScript, if if you've heard the word or the name, it is built on top of

58
00:02:42,680 --> 00:02:45,200
JavaScript and it adds in stricter rules.

59
00:02:45,200 --> 00:02:49,180
And one of those rules is that your variables cannot change type.

60
00:02:49,190 --> 00:02:51,350
So I could make a boolean variable.

61
00:02:51,380 --> 00:02:53,240
Let is hungry.

62
00:02:53,640 --> 00:02:54,560
I already have that one.

63
00:02:54,560 --> 00:02:56,240
I'll get an error if I declare it.

64
00:02:56,240 --> 00:03:06,500
Let's do let is angry set to false and then I could change is angry to now be 1239 no problem.

65
00:03:06,890 --> 00:03:12,590
So again not something that you usually would do or that really makes a lot of sense, but it's possible

66
00:03:12,590 --> 00:03:13,550
in JavaScript.

67
00:03:13,550 --> 00:03:18,680
And other than that, the main takeaway is that we can have variables of all sorts of types in JavaScript.

68
00:03:18,680 --> 00:03:23,270
We've only seen numbers so far, but now we've covered our second primitive type boolean.

69
00:03:23,270 --> 00:03:24,140
True and false.

70
00:03:24,140 --> 00:03:24,860
That's it.

