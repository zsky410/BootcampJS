1
00:00:01,220 --> 00:00:05,510
I'm taking a look at the search results that we just got back from the IMDB API.

2
00:00:05,900 --> 00:00:09,830
Inside of here, I'm looking at the very first result and I'm noticing that we've got just a couple

3
00:00:09,830 --> 00:00:13,130
of different properties that represent this first search result.

4
00:00:13,870 --> 00:00:19,090
One thing that's kind of interesting is that I don't see any information related to a lot of the stuff

5
00:00:19,090 --> 00:00:21,910
that we need to actually make this application work correctly.

6
00:00:22,180 --> 00:00:28,090
So for example, we want to make sure that we eventually show a short summary of the movie and the box

7
00:00:28,090 --> 00:00:30,850
office take the critic rating and so on.

8
00:00:30,850 --> 00:00:35,800
But none of that information is visible inside of this search result right here.

9
00:00:36,370 --> 00:00:39,040
This goes back to a discussion that we had just two videos ago.

10
00:00:39,250 --> 00:00:45,610
Usually whenever we make use of an API like this one, we got a one endpoint for doing a searching or

11
00:00:45,610 --> 00:00:51,370
index operation and we are just seeing a very limited set of information about every search result that

12
00:00:51,370 --> 00:00:52,180
we just got.

13
00:00:52,780 --> 00:00:58,330
So if we now want to get more information about a very particular movie and get like the revenue or

14
00:00:58,330 --> 00:01:02,050
the rating or whatever else, we have to do a follow up request.

15
00:01:02,230 --> 00:01:06,790
So this would be referred to as a show action or a show request or something similar.

16
00:01:07,240 --> 00:01:13,270
When we do this show request, we should hopefully be able to get a lot more information about one particular

17
00:01:13,270 --> 00:01:14,320
movie at a time.

18
00:01:15,940 --> 00:01:21,850
So let's take another look at the OMP API documentation and figure out how we can do a request like

19
00:01:21,850 --> 00:01:26,680
the one over here on the right hand side and get all that extra information that we know that our app

20
00:01:26,680 --> 00:01:27,550
is going to need.

21
00:01:28,270 --> 00:01:33,470
So I'm going to once again go back to the documentation we were looking at by search previously.

22
00:01:33,490 --> 00:01:37,480
This time I'm going to go up to buy ID or title.

23
00:01:38,020 --> 00:01:43,390
So if we do a lookup for a single movie at a time, which is essentially this section right here, we're

24
00:01:43,390 --> 00:01:46,960
going to get a bunch of information about just one particular movie.

25
00:01:48,080 --> 00:01:53,600
To do this request, we're going to add in a new parameter called simply I lowercase I.

26
00:01:54,080 --> 00:01:59,090
That is going to be the ID of a movie that we've already found through our search request.

27
00:02:00,040 --> 00:02:03,460
So to do this request right here, we're going to go back over to our code.

28
00:02:04,330 --> 00:02:07,390
I'm no longer going to pass in that string anymore.

29
00:02:07,570 --> 00:02:10,210
That was if we wanted to do a search operation.

30
00:02:10,210 --> 00:02:12,880
I now instead want to do a lookup operation.

31
00:02:13,120 --> 00:02:18,250
So I'm going to put in I like so and then I have to put in the ID of the movie that I want to look up

32
00:02:18,850 --> 00:02:20,030
to get the idea of a movie.

33
00:02:20,050 --> 00:02:23,410
I'm going to go back to the search results that I was just looking at inside of my browser.

34
00:02:24,010 --> 00:02:28,540
It looks like the ID of the movie The Avengers is TX zero eight.

35
00:02:28,570 --> 00:02:29,110
Blah blah blah.

36
00:02:29,110 --> 00:02:29,710
Right there.

37
00:02:30,400 --> 00:02:31,810
So I'm going to copy that string.

38
00:02:33,600 --> 00:02:35,550
And then paste it in as I like.

39
00:02:35,550 --> 00:02:36,060
So.

40
00:02:36,740 --> 00:02:38,090
So we no longer have an SE.

41
00:02:38,120 --> 00:02:42,950
Instead we just have an AI that indicates the exact movie that we want to get information about.

42
00:02:44,020 --> 00:02:45,460
So now save this.

43
00:02:45,460 --> 00:02:48,550
I'm going to go back over to my browser once again, refresh.

44
00:02:48,910 --> 00:02:52,120
And now I get information about just this single movie.

45
00:02:52,510 --> 00:02:56,530
And inside of here is way more information than what we got before.

46
00:02:56,530 --> 00:03:00,640
And inside of here is definitely all the information that we really need to make our application work.

47
00:03:00,910 --> 00:03:03,580
So remember, we need to eventually get the.

48
00:03:05,070 --> 00:03:07,740
And a search story or excuse me, synopsis right here.

49
00:03:07,740 --> 00:03:11,940
We need to get the box office value and the critic ratings and so on.

50
00:03:12,270 --> 00:03:15,510
And so inside of this result, we can see plot right here.

51
00:03:15,540 --> 00:03:18,120
That is the kind of plot summary of the movie.

52
00:03:18,450 --> 00:03:21,210
We can see the box office take right there.

53
00:03:21,210 --> 00:03:22,770
So that's the amount of money the movie made.

54
00:03:22,770 --> 00:03:25,350
And I can also see a rating right there.

55
00:03:25,830 --> 00:03:27,630
So that's essentially the critic rating.

56
00:03:27,630 --> 00:03:32,160
There's also a Metacritic METASCORE right here, which is another critic rating as well.

57
00:03:32,800 --> 00:03:35,090
So again, this is the request that we're going to have to do.

58
00:03:35,110 --> 00:03:40,300
Once a user selects on an individual movie or clicks an individual movie and we want to show a lot of

59
00:03:40,300 --> 00:03:43,330
information about that single movie on the screen.

60
00:03:44,480 --> 00:03:44,780
Okay.

61
00:03:44,840 --> 00:03:48,560
So now that we understand the two different types of requests we have to make, let's take another pause

62
00:03:48,560 --> 00:03:51,620
right here and we're going to start working on our UI in the next video.

