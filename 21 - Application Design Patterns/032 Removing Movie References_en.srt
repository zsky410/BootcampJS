1
00:00:00,880 --> 00:00:03,340
The last thing we need to extract is fetch data.

2
00:00:03,340 --> 00:00:09,280
So fetch data is being used inside of our Autocomplete JS file right now directly.

3
00:00:09,550 --> 00:00:13,600
So if we go to Autocomplete JS, find our on input callback right here.

4
00:00:13,600 --> 00:00:16,690
We're calling fetch data when we call fetch data right here.

5
00:00:16,690 --> 00:00:22,060
That is a reference back to the fetch data that gets defined inside of indexes.

6
00:00:22,360 --> 00:00:26,110
So this means that we have a direct link between these two files.

7
00:00:26,140 --> 00:00:29,680
Autocomplete JS is directly referencing this function right here.

8
00:00:30,040 --> 00:00:35,500
So if we ever deleted this function or renamed it or even just commented it out, our autocomplete would

9
00:00:35,500 --> 00:00:36,880
no longer work correctly.

10
00:00:37,270 --> 00:00:41,380
So we definitely do not want to have such a tight coupling between these two functions.

11
00:00:41,830 --> 00:00:46,240
So we're just going to essentially take this function right here and we're going to throw it as another

12
00:00:46,240 --> 00:00:53,260
argument or another option into our create autocomplete config object, or then going to update our

13
00:00:53,260 --> 00:00:58,870
autocomplete file and make sure that it references the fetch data that is passed on that config object

14
00:00:58,870 --> 00:01:02,590
instead of over this like direct global scope between the two files.

15
00:01:03,390 --> 00:01:05,910
So to do so, I'm going to take just the function.

16
00:01:07,370 --> 00:01:08,540
I'm going to cut it.

17
00:01:09,080 --> 00:01:10,970
I'll delete the function name at the very top.

18
00:01:12,110 --> 00:01:16,100
I'm going to add in a new key value pair to my configuration object.

19
00:01:16,820 --> 00:01:18,140
I'll call it fetch data.

20
00:01:19,410 --> 00:01:22,770
I'm going to put a set of parentheses and then paste the function.

21
00:01:23,550 --> 00:01:23,970
Now.

22
00:01:23,970 --> 00:01:27,570
I definitely have some mistakes on syntax inside of here, so I'm going to make sure that I fix those

23
00:01:27,570 --> 00:01:27,930
up.

24
00:01:28,560 --> 00:01:31,980
First off, we need to make sure that we mark fetch data as being async.

25
00:01:32,190 --> 00:01:36,510
So I'm going to delete the async keyword right there and put it right in front of fetch data.

26
00:01:37,510 --> 00:01:39,580
Well, then make sure that I take the search term.

27
00:01:40,780 --> 00:01:43,000
And as the argument to fetch data.

28
00:01:43,510 --> 00:01:49,090
And then finally I can remove the fetch data right there and the arrow and it should be good to go.

29
00:01:49,660 --> 00:01:53,350
So make sure you triple check your syntax right there because definitely very easy to make a little

30
00:01:53,350 --> 00:01:53,920
typo.

31
00:01:54,650 --> 00:01:59,070
I'm also going to do a quick change or fix to the syntax or indentation.

32
00:01:59,090 --> 00:01:59,750
There we go.

33
00:02:01,170 --> 00:02:01,390
Okay.

34
00:02:01,440 --> 00:02:08,340
So now we are passing the fetch data function as an argument into our create autocomplete configuration

35
00:02:08,340 --> 00:02:09,000
object.

36
00:02:10,759 --> 00:02:16,940
So now if we go back over to Autocomplete at the very top, once again, we will structure out the fetch

37
00:02:16,940 --> 00:02:17,780
data function.

38
00:02:18,620 --> 00:02:23,510
So now there is no direct kind of window scope access between these two different files, which is definitely

39
00:02:23,510 --> 00:02:24,470
a good improvement.

40
00:02:25,380 --> 00:02:25,680
All right.

41
00:02:25,680 --> 00:02:28,400
So I think there's just one last thing for us to take care of.

42
00:02:28,410 --> 00:02:35,100
We need to go through our autocomplete file and we need to find any reference to a movie in order to

43
00:02:35,100 --> 00:02:37,860
actually make this code generic in nature and reusable.

44
00:02:37,860 --> 00:02:41,880
We need to not make any big assumptions about the kind of data that we are working with.

45
00:02:42,120 --> 00:02:47,640
So we just have to go through and change the words movie or movies to some other kind of appropriate

46
00:02:47,670 --> 00:02:48,180
term.

47
00:02:49,220 --> 00:02:53,980
So inside of here, I first see a movie on our label, says, Search for a movie.

48
00:02:53,990 --> 00:02:56,240
I'm just going to change this to just a search.

49
00:02:58,320 --> 00:03:00,030
I'll then go down a little bit.

50
00:03:00,270 --> 00:03:05,150
So inside of on input, after we made a request, we called what came back movies.

51
00:03:05,160 --> 00:03:09,510
So again, not appropriate to have the term movies inside of Autocomplete jars anymore.

52
00:03:10,600 --> 00:03:14,410
So I'm going to change the term movies throughout this file to items.

53
00:03:14,650 --> 00:03:18,280
So this kind of reflects that we have a collection of different items that we want to show inside that

54
00:03:18,280 --> 00:03:19,000
dropdown.

55
00:03:19,450 --> 00:03:23,890
So now we can go through and update every reference to movies, to items instead.

56
00:03:24,370 --> 00:03:26,080
So the first one is inside the if statement.

57
00:03:26,080 --> 00:03:27,460
I'll change that to items.

58
00:03:28,830 --> 00:03:31,030
The next one is right here on the for loop.

59
00:03:31,050 --> 00:03:32,640
I'll change that to items.

60
00:03:33,460 --> 00:03:35,800
And I think that is about it inside of here.

61
00:03:35,830 --> 00:03:36,760
Let me do one more search.

62
00:03:36,790 --> 00:03:38,050
Yep, that's it.

63
00:03:38,680 --> 00:03:43,360
So now inside of the four loop itself, we'll change the term movie to item singular.

64
00:03:43,720 --> 00:03:46,690
So on the for loop, I'll do item.

65
00:03:48,010 --> 00:03:49,180
On render option.

66
00:03:49,300 --> 00:03:52,360
I'll change it to item input value right here.

67
00:03:52,360 --> 00:03:53,500
I'll change it to item.

68
00:03:54,300 --> 00:03:59,580
On Option Select, we'll go to item and I think that is just about it.

69
00:04:00,210 --> 00:04:02,310
I'll do a search for movie and nothing.

70
00:04:02,760 --> 00:04:08,340
So make sure inside of Autocomplete JS you do a search for movie and if you see the word movie inside

71
00:04:08,340 --> 00:04:09,180
of here, that is wrong.

72
00:04:09,180 --> 00:04:11,820
We should not have any references to movies anymore.

73
00:04:13,020 --> 00:04:13,320
All right.

74
00:04:13,320 --> 00:04:14,230
And that's pretty much it.

75
00:04:14,250 --> 00:04:17,279
Let's save this and think we're ready for one last test.

76
00:04:18,190 --> 00:04:20,610
So I'm going to go back over to my index.html.

77
00:04:21,130 --> 00:04:22,089
I'll refresh.

78
00:04:22,880 --> 00:04:26,240
All search for Avengers again and everything works correctly.

79
00:04:26,240 --> 00:04:29,570
The search occurred and I should be able to click on that and still see something appear.

80
00:04:29,930 --> 00:04:34,370
If you see any errors inside of your console, I can just about guarantee you that you still have a

81
00:04:34,370 --> 00:04:39,320
reference to movie or movies somewhere inside of Autocomplete.

82
00:04:39,320 --> 00:04:44,750
JS So make sure that you find that remaining reference and update it to the appropriate term.

83
00:04:45,740 --> 00:04:46,040
Okay.

84
00:04:46,040 --> 00:04:50,550
So at this point in time, we now have a fully reusable function called Create Autocomplete.

85
00:04:50,570 --> 00:04:55,670
We can take this function right here and we can use it on any other project we can think of, and we'll

86
00:04:55,670 --> 00:04:59,870
get the exact same behavior as the one that we currently have inside of our application.

87
00:04:59,870 --> 00:05:00,890
All we have to do.

88
00:05:02,020 --> 00:05:06,710
Is called a function and pass in these appropriate different properties.

89
00:05:06,730 --> 00:05:12,640
So we need to specify where to render the autocomplete to how to show an individual item.

90
00:05:13,520 --> 00:05:19,100
What to do when someone clicks on one, what to kind of backfill inside of the input after a user clicks

91
00:05:19,100 --> 00:05:21,800
on one, and then how to actually fetch the data.

92
00:05:21,830 --> 00:05:27,110
As long as we put all that code inside there, then we're going to get a fully functioning autocomplete

93
00:05:27,110 --> 00:05:28,010
ready to go.

94
00:05:28,580 --> 00:05:33,530
So I know this last bit of the refactor is a little bit of a pain, but I hope that at this point it's

95
00:05:33,530 --> 00:05:35,420
a little bit more clear why we went through this pain.

96
00:05:35,420 --> 00:05:39,830
And I hope you can recognize that the code that we now have is quite reusable in nature.

97
00:05:40,310 --> 00:05:43,760
So let's take a pause right here and continue with our application in the next video.

