1
00:00:00,150 --> 00:00:02,610
Next up, let's talk about using forms.

2
00:00:02,610 --> 00:00:09,720
So we saw how we could use the key down key press key up events to run some code when a user types in

3
00:00:09,720 --> 00:00:10,860
a single input.

4
00:00:10,860 --> 00:00:14,790
But what if we want to do something when a user submits an entire form?

5
00:00:14,970 --> 00:00:18,360
So let's start with a simple form that will add in.

6
00:00:18,510 --> 00:00:20,310
Let's do a couple of different inputs.

7
00:00:20,310 --> 00:00:22,530
We'll have an input type equals text.

8
00:00:23,160 --> 00:00:24,450
What should we do for this one?

9
00:00:24,450 --> 00:00:29,850
Let's go with placeholder equals credit card number.

10
00:00:31,440 --> 00:00:34,290
Sure, this is not going to be a real credit card form.

11
00:00:34,560 --> 00:00:35,820
We'll do another input.

12
00:00:35,820 --> 00:00:38,670
This one will be type equals.

13
00:00:38,670 --> 00:00:44,070
Let's do a checkbox and let's put a label around it.

14
00:00:44,280 --> 00:00:46,380
So I'll move it inside the label.

15
00:00:47,790 --> 00:00:48,720
I don't need a four.

16
00:00:48,720 --> 00:00:53,520
If I'm embedding my input inside the label, I'll put some text in here.

17
00:00:53,550 --> 00:00:54,900
Let's do a checkbox.

18
00:00:54,990 --> 00:01:05,010
I agree to sell my soul to your company and we don't need a placeholder for a checkbox.

19
00:01:05,010 --> 00:01:06,330
Let's also do.

20
00:01:06,600 --> 00:01:08,100
How about a select?

21
00:01:08,610 --> 00:01:11,550
A select where we have different options.

22
00:01:12,570 --> 00:01:17,400
If you're not super familiar with a select, it's how you can get a dropdown menu, basically.

23
00:01:17,400 --> 00:01:19,920
So why don't we pick, hmm?

24
00:01:20,160 --> 00:01:20,880
Options.

25
00:01:20,880 --> 00:01:22,260
We'll just do something boring.

26
00:01:22,260 --> 00:01:24,750
Let's do vegetables, eggplants.

27
00:01:25,930 --> 00:01:30,280
And asparagus and carrot.

28
00:01:30,490 --> 00:01:35,590
All right, so I'll put corresponding values and we'll do eggplant there.

29
00:01:36,640 --> 00:01:43,690
So we have a couple of different inputs now, and I'll also add in a button to submit this input type

30
00:01:43,690 --> 00:01:45,160
equals submit.

31
00:01:46,340 --> 00:01:49,640
And let's see what we end up with when I open it up here.

32
00:01:50,420 --> 00:01:53,160
Kind of an ugly form, but we have a couple of different inputs.

33
00:01:53,180 --> 00:01:58,940
We've got a select we've got a check box and we have our credit card input, which it's just a text

34
00:01:58,940 --> 00:02:00,380
input, no validations.

35
00:02:00,380 --> 00:02:01,850
And then our submit.

36
00:02:02,270 --> 00:02:07,940
Now, if you're familiar with forms, you'll know what happens when I click submit the page refreshes.

37
00:02:08,840 --> 00:02:15,320
A form is made to take data that we get from an input and submit it or send it somewhere.

38
00:02:15,410 --> 00:02:21,800
Traditionally, we would submit our data to one for some URL like slash sign up.

39
00:02:22,040 --> 00:02:24,410
So this would be an endpoint on our own server.

40
00:02:24,410 --> 00:02:30,740
The data would be sent to slash sign up and then on our server side we would do something, create a

41
00:02:30,740 --> 00:02:35,060
new user in the database and then respond with a new page that would load.

42
00:02:35,060 --> 00:02:38,060
And so you would end up going to a completely new page.

43
00:02:38,060 --> 00:02:44,270
But with JavaScript and the rise of single page apps and things like React and Angular and Vue or just

44
00:02:44,270 --> 00:02:44,660
vanilla.

45
00:02:44,660 --> 00:02:48,230
JS We can work with forms in a slightly different way.

46
00:02:48,350 --> 00:02:54,770
What we'll do is submit the form or when it's submitted, we'll intercept it and say, Don't send that

47
00:02:54,770 --> 00:02:55,300
request.

48
00:02:55,310 --> 00:02:56,630
Don't refresh the page.

49
00:02:56,630 --> 00:03:01,550
Just to show you right now, if I submit this, I have to refresh to get that new attribute.

50
00:03:01,550 --> 00:03:07,130
If I submit this right now, it takes me to slash sign up, which doesn't exist.

51
00:03:07,580 --> 00:03:10,820
So what we'll do with JavaScript is take the form.

52
00:03:10,820 --> 00:03:16,190
When it submitted, we'll say, stop, don't actually send a request, don't take us anywhere else.

53
00:03:16,190 --> 00:03:17,960
I just want to capture that event.

54
00:03:17,960 --> 00:03:20,210
I want to trigger some JavaScript code.

55
00:03:20,210 --> 00:03:25,460
When the user submits a form, then we can extract the information we want and do something with it,

56
00:03:25,460 --> 00:03:31,670
whether it's simply to display it back to the user, whatever we're doing here, or maybe we'll send

57
00:03:31,670 --> 00:03:35,690
the data to a database somewhere to a server, but we won't actually refresh the page.

58
00:03:35,690 --> 00:03:41,300
We'll do it using JavaScript on the same page we're currently on and we could maintain a single page

59
00:03:41,300 --> 00:03:42,200
application.

60
00:03:42,200 --> 00:03:46,580
So we're not really at the point where we're sending requests right now, but you'll see where we could

61
00:03:46,580 --> 00:03:47,840
easily add that in.

62
00:03:48,050 --> 00:03:50,930
So there is a form event called Submit.

63
00:03:51,260 --> 00:03:57,200
You could attach an on submit, which I don't recommend doing with any of those on events.

64
00:03:57,200 --> 00:03:59,000
Those properties are just not ideal.

65
00:03:59,090 --> 00:04:06,500
But in our JavaScript, if we select our form, let's call this signup form as the ID and then select

66
00:04:06,500 --> 00:04:06,710
it.

67
00:04:06,710 --> 00:04:13,490
So document dot, query selector the ID sign and then sign up form.

68
00:04:14,240 --> 00:04:23,030
Save that to a variable we can add in a form dot add event listener for the submit event.

69
00:04:24,650 --> 00:04:27,020
And we'll use the event object.

70
00:04:28,600 --> 00:04:30,700
Why don't I start by alerting?

71
00:04:31,120 --> 00:04:35,110
Submitted the form and let's see what happens.

72
00:04:35,740 --> 00:04:37,300
So I'll refresh my page.

73
00:04:38,050 --> 00:04:39,130
Click submit.

74
00:04:39,470 --> 00:04:44,290
Okay, so we get that event triggering, but then our page reloads.

75
00:04:44,290 --> 00:04:45,670
I don't know if you can tell that.

76
00:04:45,670 --> 00:04:50,980
If I go back to what I had before where I gave it an action equals slash.

77
00:04:50,980 --> 00:04:55,510
No, let's do that and we'll do method equals get.

78
00:04:56,320 --> 00:05:02,890
This is a traditional form if I submit it now we get our alert from the event handler, but then it

79
00:05:02,890 --> 00:05:04,240
still continues on.

80
00:05:04,240 --> 00:05:05,770
It does what it did earlier.

81
00:05:05,800 --> 00:05:07,630
It takes me to a different page.

82
00:05:07,630 --> 00:05:09,880
So we are capturing that event.

83
00:05:09,880 --> 00:05:14,860
We're doing something when that event is triggered, but we're not preventing the typical form behavior.

84
00:05:15,220 --> 00:05:21,670
And if I want to capture the data but not go to a new page and not send a request, we have a way of

85
00:05:21,670 --> 00:05:22,330
doing it.

86
00:05:22,540 --> 00:05:25,120
There is a method on the event object.

87
00:05:25,330 --> 00:05:27,670
It's called prevent default.

88
00:05:27,850 --> 00:05:33,430
So e if I'm calling my event object e dot prevent default.

89
00:05:34,710 --> 00:05:38,910
And what this will do when we execute it is prevent the default behavior.

90
00:05:38,910 --> 00:05:45,060
And the default behavior in this case, with a form when it submitted, is to continue sending on your

91
00:05:45,060 --> 00:05:52,800
data, sending a request to whatever URL we specified in our case, slash know as a get request.

92
00:05:53,520 --> 00:05:55,710
So now if we try it, let's see if it works.

93
00:05:56,100 --> 00:06:00,300
I click submit, we get the alert and we don't go anywhere.

94
00:06:00,720 --> 00:06:06,870
Our form has not actually submitted the submit event has run, but we haven't actually submitted data

95
00:06:06,870 --> 00:06:07,560
anywhere.

96
00:06:07,560 --> 00:06:10,620
And this leaves us free to now extract data.

97
00:06:10,620 --> 00:06:18,660
If we wanted to get all the data at once and send it to an API using Ajax using a client side request.

98
00:06:18,870 --> 00:06:24,120
Again, something we haven't learned yet, but the point is we have the flexibility to do something

99
00:06:24,120 --> 00:06:27,600
with the data and we can still capture these submit event.

100
00:06:27,600 --> 00:06:34,170
And what's nice about doing it this way as opposed to capturing each input as it changes every single

101
00:06:34,170 --> 00:06:34,740
time.

102
00:06:34,920 --> 00:06:40,530
Like we could have a key down or key press on here and any time this input changes, we could create

103
00:06:40,530 --> 00:06:44,280
a variable in our JavaScript that is in sync with that.

104
00:06:44,280 --> 00:06:50,370
And any time you select a different option, we could immediately update that variable or a second variable,

105
00:06:50,700 --> 00:06:53,190
but that means attaching a bunch of event listeners.

106
00:06:53,190 --> 00:06:59,430
We need to attach one here, one to the checkbox, one here, and then one for the submission as well.

107
00:06:59,850 --> 00:07:04,750
But by adding a submit event listener, there's just one event we're waiting for.

108
00:07:04,800 --> 00:07:09,900
We tell it not to behave the way it normally behaves, and then we can extract our data in here.

109
00:07:10,470 --> 00:07:14,340
So why don't we take a look at the event object for just a moment.

110
00:07:15,630 --> 00:07:17,070
I'll open up my console.

111
00:07:17,070 --> 00:07:18,240
We'll click submit.

112
00:07:18,240 --> 00:07:20,040
Let's put some data right there.

113
00:07:20,040 --> 00:07:25,350
Let's select carrot, submit, we get our alert, here's the event.

114
00:07:25,380 --> 00:07:30,090
Notice it has type set to submit and then we have the target here.

115
00:07:30,240 --> 00:07:37,320
Target is the form that was submitted and we also have this property called Default Prevented, which

116
00:07:37,320 --> 00:07:40,020
is set to true because we did prevent default.

117
00:07:41,100 --> 00:07:41,820
All righty.

118
00:07:41,820 --> 00:07:47,820
Now that we have the submit event and we're preventing default, let's extract the data from the form

119
00:07:47,820 --> 00:07:50,460
and do something kind of trivial with it.

120
00:07:51,240 --> 00:07:56,070
So to extract the data, we need to be able to select the individual elements.

121
00:07:56,070 --> 00:08:02,550
So we've got an input, another input with type equals checkbox and then these select.

122
00:08:02,880 --> 00:08:07,830
So why don't we start with the text and put that one to easy enough, I'll select them all.

123
00:08:07,830 --> 00:08:17,100
So const what we call it credit card number, let's go with credit card equals, document dot, query

124
00:08:17,100 --> 00:08:18,000
selector.

125
00:08:19,170 --> 00:08:21,690
And did we give IDs to these inputs?

126
00:08:22,590 --> 00:08:24,450
It will be easiest if we just do an ID.

127
00:08:24,480 --> 00:08:28,110
Let's do credit card or CC for the checkbox.

128
00:08:28,410 --> 00:08:29,640
Let's go with.

129
00:08:29,640 --> 00:08:30,150
Hmm.

130
00:08:30,240 --> 00:08:35,880
I agree to sell my soul to your company terms check or something or just terms.

131
00:08:35,880 --> 00:08:41,400
And for our select, let's go with ID of veggie.

132
00:08:42,929 --> 00:08:43,530
Okay.

133
00:08:44,760 --> 00:08:47,530
And then we'll go into our app, guys.

134
00:08:47,550 --> 00:08:50,430
We'll select based off of that ID credit card.

135
00:08:50,970 --> 00:08:53,370
We'll also select the other options.

136
00:08:53,370 --> 00:09:01,440
So we had credit card, then we had terms check or what do we want to call that terms checkbox, credit

137
00:09:01,440 --> 00:09:03,990
card input, maybe just to be more descriptive.

138
00:09:04,710 --> 00:09:11,670
And this was the ID of terms, and then we have the VIJI select with the ID of Fiji.

139
00:09:11,970 --> 00:09:13,920
So now we have our three inputs.

140
00:09:14,040 --> 00:09:20,970
What we would do in here is probably just access each one of those input values, although they do differ

141
00:09:20,970 --> 00:09:26,580
a little bit because we have a regular input, a text input, so why don't we console that log credit

142
00:09:26,580 --> 00:09:34,080
card input value and maybe we'll just add CC comma so we can see both of them.

143
00:09:34,350 --> 00:09:36,260
So we can see what we're printing out.

144
00:09:36,270 --> 00:09:40,410
Then to get the checkbox, how do we get the value from a checkbox?

145
00:09:40,440 --> 00:09:43,920
Well, why don't we start with just doing terms checkbox?

146
00:09:45,180 --> 00:09:46,560
We'll print out terms.

147
00:09:46,560 --> 00:09:52,590
And then for the last one we have vegie select, veggie select.

148
00:09:53,460 --> 00:09:58,890
And then here we'll do vegie select dot value.

149
00:09:59,280 --> 00:10:00,600
Let's see what we get.

150
00:10:01,050 --> 00:10:02,340
So I'll refresh.

151
00:10:03,170 --> 00:10:04,420
Let's fill something out in here.

152
00:10:04,430 --> 00:10:05,400
Credit card number.

153
00:10:05,420 --> 00:10:07,550
Just make up a fake number.

154
00:10:08,330 --> 00:10:09,320
Then we'll do.

155
00:10:09,500 --> 00:10:10,220
Let's do.

156
00:10:10,220 --> 00:10:13,070
Agree and go with asparagus.

157
00:10:13,070 --> 00:10:13,790
Submit.

158
00:10:15,510 --> 00:10:17,610
And here's what we have credit card.

159
00:10:17,610 --> 00:10:23,200
We got the value out correctly for terms we got on, which is the checkbox here.

160
00:10:23,240 --> 00:10:27,120
I submit again we still get on even though it's not checked anymore.

161
00:10:27,210 --> 00:10:29,760
So value maybe isn't what we want to use.

162
00:10:29,820 --> 00:10:35,130
I'll show you the the better attribute in just a moment or the better property and then vegie select.

163
00:10:35,130 --> 00:10:39,000
We did get asparagus notice we're getting the value we set.

164
00:10:39,000 --> 00:10:45,810
So it's eggplant with a capital E, but the value I gave as an attribute was eggplant lowercase E.

165
00:10:45,840 --> 00:10:47,250
So this is what we're getting.

166
00:10:47,520 --> 00:10:48,960
We're not getting this here.

167
00:10:49,800 --> 00:10:56,640
And if we go back to our app, JJ's, instead of printing out terms checkbox value, there is a property

168
00:10:56,640 --> 00:11:04,260
called checked on inputs with type equaled check or type equal to check, and it's a boolean property.

169
00:11:04,260 --> 00:11:05,850
So we've got false.

170
00:11:06,450 --> 00:11:08,340
Now we've got true.

171
00:11:09,220 --> 00:11:09,830
Cool.

172
00:11:09,850 --> 00:11:11,050
So we have our data.

173
00:11:11,050 --> 00:11:12,660
We could put it in variables.

174
00:11:12,670 --> 00:11:17,410
I won't spend too much time here doing that because it really just depends on what you're trying to

175
00:11:17,410 --> 00:11:18,010
do with it.

176
00:11:18,010 --> 00:11:20,800
But we have access to the data from that form.

177
00:11:20,800 --> 00:11:26,800
But the point here is that we can stop, prevent default from a form submission and then tap into the

178
00:11:26,800 --> 00:11:30,460
form or to the inputs, get the values we want, and then do something else.

179
00:11:30,460 --> 00:11:40,840
We could send form data to database or append something to page using form data.

180
00:11:41,260 --> 00:11:44,320
It's totally up to you, but the process looks like this.

181
00:11:44,320 --> 00:11:46,210
We have a submit event on a form.

182
00:11:46,210 --> 00:11:49,180
We prevent the default which I like to put up top.

183
00:11:49,180 --> 00:11:55,060
Just so it's clear, you can see it's still working the way we had it written, but it makes it very

184
00:11:55,060 --> 00:11:55,960
obvious what we're doing.

185
00:11:55,960 --> 00:12:01,510
First, we're stopping default submission behavior for a form and then we're extracting the information

186
00:12:01,510 --> 00:12:01,990
we want.

