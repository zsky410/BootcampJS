1
00:00:00,090 --> 00:00:06,540
Next up will make a little tiny game where we have a player, a little sprite of a guy walking in a

2
00:00:06,540 --> 00:00:07,110
coin.

3
00:00:07,140 --> 00:00:12,600
We're going to move the coin somewhere randomly on the screen and we'll use the arrow keys to make our

4
00:00:12,600 --> 00:00:17,490
little avatar walk and pick up the coin, at which point the coin will move somewhere else and you'll

5
00:00:17,490 --> 00:00:19,110
keep moving towards the coin.

6
00:00:19,320 --> 00:00:24,540
I guess it's a commentary on the pursuit of wealth and never being fulfilled, and there's always a

7
00:00:24,540 --> 00:00:25,770
new coin to go chase.

8
00:00:26,310 --> 00:00:31,390
Okay, so to do this, we're going to take advantage of some of the key events we just learned.

9
00:00:31,410 --> 00:00:34,760
We're going to use the arrow keys to move our little avatar.

10
00:00:34,770 --> 00:00:36,640
And I've given you starter code.

11
00:00:36,660 --> 00:00:40,620
There is a folder that you can download called Coin Game Starter.

12
00:00:40,770 --> 00:00:45,860
It has the two images one for the player, one for the coin and in the app.

13
00:00:46,320 --> 00:00:51,480
It also has a function that I've given you just so that we don't have to spend too much time trying

14
00:00:51,480 --> 00:00:52,650
to write this logic.

15
00:00:52,770 --> 00:01:00,450
It's logic that will detect if two elements on the DOM to divs or images or whatever are overlapping.

16
00:01:00,540 --> 00:01:06,270
And we'll use that to figure out when the avatar is actually touch the coin and then we can move the

17
00:01:06,270 --> 00:01:06,840
coin.

18
00:01:07,350 --> 00:01:12,180
So this is straight from I think I found it on StackOverflow and adapted it a tiny bit.

19
00:01:12,390 --> 00:01:17,220
It's just kind of annoying to type ourselves, and it's also the kind of thing that if I had to do this,

20
00:01:17,220 --> 00:01:19,750
I would just Google it anyway, which is what I did.

21
00:01:19,770 --> 00:01:21,210
So I'll be transparent about that.

22
00:01:21,390 --> 00:01:23,970
I didn't write this from scratch, just modified it.

23
00:01:24,270 --> 00:01:29,400
And what we're going to do to start is just make it so we can move our player.

24
00:01:29,670 --> 00:01:35,340
And I'll tell you now that to make a game, a real game that performs well, you would want to use canvas

25
00:01:35,340 --> 00:01:38,730
in the browser, which we're not going to talk about, at least right now.

26
00:01:38,760 --> 00:01:44,820
We're going to just focus on the key events and we'll move the player by adjusting CSS properties top

27
00:01:44,820 --> 00:01:45,690
and left.

28
00:01:46,560 --> 00:01:51,970
So I'm going to start by selecting that image, which has an idea of player.

29
00:01:51,990 --> 00:01:53,790
So we'll do document get.

30
00:01:53,790 --> 00:01:55,620
Nope, we'll do query selector.

31
00:01:56,220 --> 00:01:58,350
We could do get element by ID too.

32
00:01:59,220 --> 00:02:01,220
We want just regular query selector.

33
00:02:01,230 --> 00:02:08,400
The ID is called player const player image or just player equals.

34
00:02:08,400 --> 00:02:09,449
Or how about Avatar?

35
00:02:11,640 --> 00:02:17,250
And we also want to add an event for a key press or a key down or key up.

36
00:02:17,490 --> 00:02:20,700
But we don't want it to be on one of these elements.

37
00:02:20,700 --> 00:02:25,590
We want to be able to just press a key like the left arrow, the up arrow, anywhere.

38
00:02:25,920 --> 00:02:28,650
And to do that, we can attach it to the window.

39
00:02:28,650 --> 00:02:35,490
And key press is not going to do what we need it to do here in most browsers, Arrow Keys are not considered

40
00:02:35,490 --> 00:02:38,910
key presses, so we'll do key down or Key up.

41
00:02:38,910 --> 00:02:39,990
Let's do key up.

42
00:02:39,990 --> 00:02:45,270
For now, we'll add event listener for key up function.

43
00:02:45,780 --> 00:02:50,610
We'll use the event object and why don't we console.log event key.

44
00:02:51,870 --> 00:02:53,190
We'll refresh the page.

45
00:02:53,190 --> 00:02:57,330
I'll open up my console and I'm going to hit the down arrow.

46
00:02:58,350 --> 00:02:59,100
There we go.

47
00:02:59,280 --> 00:03:01,680
Right, left up.

48
00:03:02,190 --> 00:03:02,760
Cool.

49
00:03:02,850 --> 00:03:06,450
So we have those four different arrows that we want to work with.

50
00:03:06,690 --> 00:03:09,360
Those are the keys that we care about.

51
00:03:09,360 --> 00:03:10,530
Event key.

52
00:03:10,830 --> 00:03:12,750
And let's just take one of them.

53
00:03:13,290 --> 00:03:14,910
Let's start with down.

54
00:03:14,910 --> 00:03:21,230
So when you press down, we want to add to the image or the avatar style.

55
00:03:21,240 --> 00:03:28,860
So Avatar dot style, dot top and I could just hard code it right now to be like 200 pixels.

56
00:03:29,400 --> 00:03:31,970
The initial CSS has top at 100.

57
00:03:31,980 --> 00:03:34,620
So if we set it to 200, it will move downwards.

58
00:03:34,620 --> 00:03:41,430
And right now I'm doing this just whenever you press any key at all, I'll refresh the page and I'll

59
00:03:41,430 --> 00:03:43,020
hit down or right.

60
00:03:43,170 --> 00:03:45,720
And it does move down, but only the first time.

61
00:03:45,780 --> 00:03:49,770
Every other time it's just being reset to 200 pixels.

62
00:03:50,040 --> 00:03:53,550
So this is where it gets kind of annoying if you're not using canvas.

63
00:03:53,550 --> 00:03:59,940
What we need to do is figure out the current value, whether it's 200 or 100 or some other value.

64
00:04:00,090 --> 00:04:04,020
But this is a string, so we need to remove the pixels.

65
00:04:04,440 --> 00:04:07,770
We want to turn that into an actual number like 200.

66
00:04:07,800 --> 00:04:09,570
Then we want to add some amount.

67
00:04:09,570 --> 00:04:14,880
Let's say we're adding 50 pixels, then we want to take 250 and turn it into a string.

68
00:04:15,360 --> 00:04:21,390
Then we want to take that and add X and use that to update Avatar style top.

69
00:04:22,140 --> 00:04:25,800
So what I'm going to do is probably make a separate function.

70
00:04:26,070 --> 00:04:28,740
We'll call this const extract.

71
00:04:29,220 --> 00:04:29,590
Mm.

72
00:04:29,760 --> 00:04:30,900
What do we want to call it.

73
00:04:30,900 --> 00:04:32,970
Extract position.

74
00:04:34,480 --> 00:04:36,520
And we'll pass in a string.

75
00:04:37,510 --> 00:04:39,190
We'll call this pause.

76
00:04:40,880 --> 00:04:52,370
And to use it, we would do something like this, extract pause of and then avatar style top and that

77
00:04:52,370 --> 00:04:58,100
would be something like 200 pixels and we want to get 200 back from this function.

78
00:04:58,820 --> 00:05:04,030
So we'll start by getting rid of the pecs and we can use slice to do that.

79
00:05:04,040 --> 00:05:13,220
If I have 200 x dot slice and I go from 0 to -2, I'll get rid of those last two characters.

80
00:05:13,220 --> 00:05:17,510
Even if my string is a lot longer, we'll just remove the last two.

81
00:05:17,540 --> 00:05:22,580
We're not actually removing it, but we're creating a new string, so we'll do that here.

82
00:05:22,580 --> 00:05:26,360
Pause dot, slice zero, comma, negative two.

83
00:05:27,230 --> 00:05:30,410
And then we want to make sure that we turn this into a number.

84
00:05:30,650 --> 00:05:33,440
And to do that we can do parse int.

85
00:05:36,110 --> 00:05:38,090
And let's just copy this over here.

86
00:05:38,120 --> 00:05:47,060
Let's make a variable called pause equals 350 p x and then call parse int of that pause position, we

87
00:05:47,060 --> 00:05:48,110
get 350.

88
00:05:48,200 --> 00:05:55,910
If we set pause to be something larger and run that again, we get a number.

89
00:05:57,440 --> 00:06:03,260
So we want to return this and I think I'll just do an implicit return on a single line like that.

90
00:06:03,710 --> 00:06:06,170
So now we have that function extract position.

91
00:06:07,520 --> 00:06:16,610
And we'll save that to a variable cost current top and then we'll just take a current top, we'll add

92
00:06:16,610 --> 00:06:21,830
in, let's say 50 and then we want to add pixels the string p x.

93
00:06:22,520 --> 00:06:31,190
So what I'll do is set avatar dot style dot top to be current top.

94
00:06:31,640 --> 00:06:39,440
I'll do string interpolation here with a template, literal current top plus 50 and then p x outside

95
00:06:39,440 --> 00:06:40,460
of those brackets.

96
00:06:41,000 --> 00:06:42,550
And that should do it for me.

97
00:06:42,560 --> 00:06:43,340
Let's see.

98
00:06:44,450 --> 00:06:47,420
Now, this is going to fire every time I press any key.

99
00:06:48,580 --> 00:06:48,730
Hmm.

100
00:06:48,920 --> 00:06:51,360
Does not seem to be working the way I'm expecting.

101
00:06:51,380 --> 00:06:52,400
Let's take a look.

102
00:06:52,970 --> 00:06:54,220
So we have our image.

103
00:06:54,230 --> 00:06:56,800
Let's see what avatar dot style dot top is.

104
00:06:56,810 --> 00:06:58,010
Let's console that log.

105
00:06:58,010 --> 00:07:01,010
Avatar, dot style, dot top.

106
00:07:02,060 --> 00:07:03,470
Every time I press a key.

107
00:07:05,920 --> 00:07:06,430
Hmm.

108
00:07:06,460 --> 00:07:07,570
We're not getting anything.

109
00:07:08,140 --> 00:07:10,240
So is this returning?

110
00:07:11,170 --> 00:07:12,880
Avatar style laptop.

111
00:07:12,970 --> 00:07:15,790
Okay, so here's what's going on and figure it out.

112
00:07:15,790 --> 00:07:16,630
Our issue.

113
00:07:16,870 --> 00:07:22,540
Initially on our image, the very first time it loads we don't have an inline top set.

114
00:07:22,540 --> 00:07:28,000
So even though we have it set in CSS, I actually went over this in hopes of preventing these issues

115
00:07:28,240 --> 00:07:33,420
for you guys early on in the DOM sections and then I completely forgot about it here.

116
00:07:33,430 --> 00:07:34,390
So what's going on?

117
00:07:34,390 --> 00:07:42,010
Is that Avatar style top initially is an empty string and when I'm trying to extract a position from

118
00:07:42,040 --> 00:07:44,020
that, we're getting not a number.

119
00:07:44,020 --> 00:07:48,250
And then every time after that we're working with not a number, which is not working.

120
00:07:48,250 --> 00:07:55,120
Well, you might think that we could do this, give a default value if position is not passed in or

121
00:07:55,120 --> 00:07:58,870
if it's empty string or undefined, set it to be ten pixels.

122
00:07:58,870 --> 00:08:04,240
We'll extract ten or we could do zero pixels and turn that into just zero.

123
00:08:04,270 --> 00:08:09,700
The problem is that if I tried out those default parameters don't run.

124
00:08:09,700 --> 00:08:15,160
If I do extract position of an empty string, it doesn't work.

125
00:08:15,550 --> 00:08:17,260
If I passed in nothing.

126
00:08:17,620 --> 00:08:20,890
Oh well, we're not returning anything, so that's a problem.

127
00:08:20,890 --> 00:08:22,870
But if I do return something.

128
00:08:25,390 --> 00:08:26,320
I would get zero.

129
00:08:26,320 --> 00:08:29,590
But if I pass an empty string in, we still get not a number.

130
00:08:29,920 --> 00:08:32,230
So this default parameter won't work.

131
00:08:32,260 --> 00:08:33,850
What we could probably just do.

132
00:08:33,880 --> 00:08:36,200
It's kind of clunky and it's not that bad.

133
00:08:36,220 --> 00:08:43,539
Say if not position because an empty string is still falsey even though it won't trigger a default parameter

134
00:08:43,539 --> 00:08:46,360
value, we'll simply return zero.

135
00:08:47,980 --> 00:08:54,160
So if currently Avatar style dot top is an empty string, then we'll return zero and then use that.

136
00:08:54,700 --> 00:08:57,280
Okay, so that should work better for us.

137
00:08:57,280 --> 00:09:00,920
And then we're setting avatar style that top using that.

138
00:09:00,940 --> 00:09:06,430
Let's make sure though, double check and I'll refresh the page and it looks like it's working one more

139
00:09:06,430 --> 00:09:07,030
time.

140
00:09:08,050 --> 00:09:08,500
Okay.

141
00:09:08,500 --> 00:09:09,100
Cool.

142
00:09:09,880 --> 00:09:12,280
So now let's make it so it doesn't do this.

143
00:09:12,280 --> 00:09:14,620
Every single key that is ever pressed.

144
00:09:14,650 --> 00:09:20,080
Let's make sure it's only if event key is equal to arrow down.

145
00:09:20,230 --> 00:09:21,760
This is moving us down.

146
00:09:22,060 --> 00:09:28,150
I did do some research and figured out that in Internet Explorer, the Arrow Keys are actually just

147
00:09:28,150 --> 00:09:32,050
left, right, up and down instead of arrow left, arrow down.

148
00:09:32,050 --> 00:09:34,030
So we could account for that as well.

149
00:09:34,240 --> 00:09:42,490
We would just need to do if event dot key equals arrow down or event key or e key equals down.

150
00:09:43,780 --> 00:09:48,310
Then we'll run this code where we're adding to the top.

151
00:09:48,310 --> 00:09:51,010
So adding more pixels to the top moves us down.

152
00:09:51,250 --> 00:09:52,990
Let's get the other direction going.

153
00:09:52,990 --> 00:10:07,600
So else if events key equals arrow up or e key equals up for Internet Explorer and edge, we'll do something

154
00:10:07,600 --> 00:10:10,690
similar and we can refactor this later.

155
00:10:10,690 --> 00:10:13,440
We'll just do some very explicit long code.

156
00:10:13,450 --> 00:10:20,890
We'll get the current top and then we'll set the Avatar style up to just subtract 50 pixels.

157
00:10:21,730 --> 00:10:22,960
Let's test it out.

158
00:10:22,990 --> 00:10:23,710
Refresh.

159
00:10:23,710 --> 00:10:25,240
So I'm going to hit down.

160
00:10:25,840 --> 00:10:26,890
I'll hit up.

161
00:10:27,520 --> 00:10:27,940
I'll hit.

162
00:10:27,940 --> 00:10:28,280
Right.

163
00:10:28,300 --> 00:10:29,280
Nothing happens left.

164
00:10:29,290 --> 00:10:30,160
Nothing happens.

165
00:10:30,160 --> 00:10:31,770
So that's working pretty well.

166
00:10:31,780 --> 00:10:35,980
There's one issue with the workaround I added in for the very first time.

167
00:10:35,980 --> 00:10:38,140
We pressed the key I'm going to hit down.

168
00:10:38,290 --> 00:10:39,910
We actually move up.

169
00:10:40,270 --> 00:10:47,500
And that's happening because my initial style for the top is 100 pixels and then left is ten pixels.

170
00:10:47,500 --> 00:10:54,610
So I could either go to my app JS and change this instead of returning zero, we could return 100.

171
00:10:54,610 --> 00:10:58,460
So we're matching what the current top is and let's see if that works.

172
00:10:58,460 --> 00:10:59,530
So I'm going to hit down.

173
00:10:59,800 --> 00:11:00,520
There we go.

174
00:11:00,730 --> 00:11:02,410
So we don't have that issue anymore.

175
00:11:04,270 --> 00:11:05,650
So we've got up and down now.

176
00:11:05,650 --> 00:11:06,970
How about left and right?

177
00:11:07,090 --> 00:11:10,960
Well, it's the same idea, but we're going to have to change it up just a tiny bit.

178
00:11:10,960 --> 00:11:18,130
So let's duplicate our elseif and let's do if the user hits the let's do the right arrow.

179
00:11:18,130 --> 00:11:25,900
So right arrow or if key equals right for those Windows browsers or Microsoft browsers, we don't want

180
00:11:25,900 --> 00:11:26,650
the top.

181
00:11:26,650 --> 00:11:28,330
We'll get the current left.

182
00:11:29,390 --> 00:11:33,620
And we want to extract that number from avatar stylist.

183
00:11:34,250 --> 00:11:36,140
And then this is going to be annoying.

184
00:11:36,140 --> 00:11:38,220
Again, we're returning 100.

185
00:11:38,240 --> 00:11:45,170
Why don't I just say the original left is also 100, so we're in sync and then we'll set Avatar style

186
00:11:45,410 --> 00:11:50,300
left equals current left plus 50.

187
00:11:50,810 --> 00:11:52,310
And then one more.

188
00:11:53,060 --> 00:11:57,950
We want an Elsa if we don't want an else, because we have a million other keys that could be triggering

189
00:11:57,950 --> 00:11:58,400
this.

190
00:11:58,400 --> 00:12:02,320
We only want this group of four so else is not what we want.

191
00:12:02,330 --> 00:12:06,980
This will be a left arrow and we'll check if it equals left.

192
00:12:08,040 --> 00:12:09,810
And then we'll do current left.

193
00:12:09,810 --> 00:12:10,830
That's the same.

194
00:12:10,860 --> 00:12:14,190
We'll just subtract and we'll cross our fingers.

195
00:12:14,220 --> 00:12:15,070
Let's see.

196
00:12:15,090 --> 00:12:16,560
So I'm going to hit the right arrow.

197
00:12:16,560 --> 00:12:17,520
And the left arrow.

198
00:12:17,550 --> 00:12:18,910
It's not working.

199
00:12:18,930 --> 00:12:20,220
So what's going on?

200
00:12:21,330 --> 00:12:22,760
Red dot key equals.

201
00:12:23,400 --> 00:12:26,070
Well, that was one of the dumber things I've ever done.

202
00:12:26,310 --> 00:12:27,120
That's a complete lie.

203
00:12:27,150 --> 00:12:29,910
I've done far dumber things, but this was very silly.

204
00:12:29,940 --> 00:12:31,410
Hopefully you caught it before me.

205
00:12:31,530 --> 00:12:33,250
Arrow down, arrow up.

206
00:12:33,270 --> 00:12:35,050
This needs to be arrow, right?

207
00:12:35,070 --> 00:12:35,970
Not right.

208
00:12:35,970 --> 00:12:36,570
Arrow.

209
00:12:38,130 --> 00:12:39,720
And then same thing here.

210
00:12:40,790 --> 00:12:42,440
We need arrow left.

211
00:12:43,370 --> 00:12:44,690
All right, let's try again.

212
00:12:45,590 --> 00:12:45,840
Okay.

213
00:12:45,860 --> 00:12:46,820
I can move.

214
00:12:47,630 --> 00:12:48,680
I can go down.

215
00:12:48,680 --> 00:12:49,700
I can go up.

216
00:12:49,910 --> 00:12:57,200
All right, so one fun thing we can do is make it so that when we're moving to the left, our image

217
00:12:57,200 --> 00:12:59,010
is facing to the left.

218
00:12:59,030 --> 00:13:05,270
And to do that, I can just show you here, if we do image style, I have it selected transform and

219
00:13:05,270 --> 00:13:08,320
we set scale to be negative one, comma one.

220
00:13:09,830 --> 00:13:10,790
Image is not defined.

221
00:13:10,810 --> 00:13:12,290
Oh, that should have been Avatar.

222
00:13:13,430 --> 00:13:14,540
Try that again.

223
00:13:14,660 --> 00:13:16,160
We're now facing left.

224
00:13:16,160 --> 00:13:19,730
So we've scaled the image on the x axis.

225
00:13:19,730 --> 00:13:24,440
If we pass negative one, it basically flips the image and then to go back the other way, we would

226
00:13:24,440 --> 00:13:29,000
just go scale one, comma one, so we could just copy this.

227
00:13:29,090 --> 00:13:32,480
And when you're moving to the right, well, let's start with the left.

228
00:13:32,480 --> 00:13:38,540
When you move to the left, we'll set Avatar style transform to be scale of negative one, comma one.

229
00:13:38,540 --> 00:13:44,450
And then when you move back to the right, next time we'll go back to one comma, one refresh, I'll

230
00:13:44,450 --> 00:13:48,050
go down to the right and stay the same left.

231
00:13:48,050 --> 00:13:50,030
We're now facing the correct direction.

232
00:13:50,840 --> 00:13:53,180
So obviously this movement kind of sucks.

233
00:13:53,180 --> 00:13:56,690
It's based off of having to press the key over and over and over.

234
00:13:56,690 --> 00:13:59,990
If I just hold one of the arrow keys, it's not going to do it for me.

235
00:14:00,980 --> 00:14:02,000
And that's okay.

236
00:14:02,030 --> 00:14:04,640
This is not really how you would build a game for the most part.

237
00:14:04,640 --> 00:14:10,460
I mean, this could be a little demo, but you would use canvas, you would use some library to help

238
00:14:10,460 --> 00:14:13,190
you out with physics where you had coordinates.

239
00:14:13,190 --> 00:14:16,130
It was it's a lot easier, but this is a good enough demo.

240
00:14:16,130 --> 00:14:20,450
So why don't we figure out now how to move the coin to a random place on the page?

241
00:14:20,450 --> 00:14:24,500
And then when you touch that coin, we'll move the coin again.

242
00:14:25,790 --> 00:14:29,840
So to move the coin, why don't we just make a function to do that?

243
00:14:29,840 --> 00:14:34,760
We'll call it const move coin equals.

244
00:14:35,000 --> 00:14:36,500
We don't need any arguments.

245
00:14:37,280 --> 00:14:41,180
I guess we could pass in the thing we're trying to move, but we'll just do move coin.

246
00:14:41,180 --> 00:14:42,380
We'll select the coin.

247
00:14:42,380 --> 00:14:43,400
Do I have it selected?

248
00:14:43,400 --> 00:14:43,940
No.

249
00:14:44,360 --> 00:14:45,980
So const coin.

250
00:14:46,490 --> 00:14:53,900
And I think I'm going to select this up top with our avatar equals document query selector with the

251
00:14:53,900 --> 00:14:55,130
ID of coin.

252
00:14:56,060 --> 00:15:03,350
Then down here we'll want to pick a random position to move that coin to and then move that coin to

253
00:15:03,350 --> 00:15:04,850
it using top and left.

254
00:15:04,850 --> 00:15:12,380
So we'll pick some random numbers based off of window dot inner height, which we saw sometime in this

255
00:15:12,380 --> 00:15:18,920
course already a couple of videos ago, if I call window inner height or let's do inner width, it tells

256
00:15:18,920 --> 00:15:21,590
me I have 928 pixels available.

257
00:15:21,590 --> 00:15:24,800
I shrink that down more and call it again.

258
00:15:24,800 --> 00:15:31,070
Now it's 175, so we don't want to move the coin somewhere way off the screen if the window is not large

259
00:15:31,070 --> 00:15:35,390
enough because you could have a large screen, we don't want to do what it did.

260
00:15:35,390 --> 00:15:37,550
Body window, dot screen.

261
00:15:38,330 --> 00:15:42,560
We don't want to use this because this is the available width for the window.

262
00:15:42,590 --> 00:15:43,490
On my monitor.

263
00:15:43,490 --> 00:15:50,630
It's 1920, but I might only have 100 something pixels available, so we'll use those windows inner

264
00:15:50,630 --> 00:15:53,750
height and I'll do a math random.

265
00:15:54,800 --> 00:15:58,580
We'll multiply it by windows inner height and I'll floor that.

266
00:15:58,580 --> 00:16:05,720
So we get a whole number and we'll save that to a variable called for doing height.

267
00:16:05,720 --> 00:16:08,240
We'll call that Y and then duplicate it.

268
00:16:08,900 --> 00:16:14,540
Make another variable called x method random window inner width.

269
00:16:15,020 --> 00:16:16,730
So we have those two variables.

270
00:16:16,730 --> 00:16:26,000
Now I want to take the coin and do coin dot style, dot top equals and then I'll do a string or we don't

271
00:16:26,000 --> 00:16:27,020
even have to do a query string.

272
00:16:27,020 --> 00:16:33,920
We could use concatenation and just plus sine pixels at the end, but I'll do a string template literal.

273
00:16:33,920 --> 00:16:37,610
So for the top we want why this is based off of the height.

274
00:16:37,610 --> 00:16:48,260
So height p x and then for the left we'll do x, p x and let's just try calling move coin from over

275
00:16:48,260 --> 00:16:48,830
here.

276
00:16:49,430 --> 00:16:50,420
So move.

277
00:16:50,420 --> 00:16:52,010
Let me make some more space here.

278
00:16:52,550 --> 00:16:53,600
Move, coin.

279
00:16:53,690 --> 00:16:56,390
Let's see if it works and it appears to be working.

280
00:16:57,140 --> 00:16:59,660
Okay, so we're moving the coin around.

281
00:17:00,200 --> 00:17:02,300
I'm sure it's not perfect.

282
00:17:02,780 --> 00:17:07,849
Our logic may end up moving it off the screen at some point, but it's simple enough for now, so that

283
00:17:07,849 --> 00:17:08,900
moves the coin.

284
00:17:09,140 --> 00:17:14,630
Now, all that's left to do is to initially move the coin at the beginning when our code runs.

285
00:17:14,630 --> 00:17:20,119
So we can just put that somewhere, maybe put our function definitions.

286
00:17:22,230 --> 00:17:29,940
So we could just call that early on, so we could just execute that and move coin at the beginning so

287
00:17:29,940 --> 00:17:34,980
that when you refresh the page, the coin is somewhere else and then we'll move to try and go get it.

288
00:17:35,820 --> 00:17:37,080
And nothing's going to happen.

289
00:17:37,080 --> 00:17:42,690
So the last thing to do is figure out when we've collided, which I've thankfully given us a nice helper

290
00:17:42,690 --> 00:17:45,720
function that computes that it's called is touching.

291
00:17:46,170 --> 00:17:55,470
And all we do here inside of this event listener after we've moved the the avatar, if necessary, we

292
00:17:55,470 --> 00:17:57,360
can just check if.

293
00:17:58,030 --> 00:18:01,900
We want to check is touching that function that I gave you.

294
00:18:01,930 --> 00:18:05,530
We'll pass in the avatar and the coin.

295
00:18:05,980 --> 00:18:09,700
And if that's the case, we'll just call move coin again.

296
00:18:10,840 --> 00:18:14,180
So if this returns true, we pass in two items.

297
00:18:14,200 --> 00:18:15,100
It returns true.

298
00:18:15,100 --> 00:18:18,370
If they are touching, then we'll call move coin.

299
00:18:18,580 --> 00:18:19,540
Let's try it.

300
00:18:21,160 --> 00:18:26,620
So, so far it's touching has been called a couple of times, but we're not actually touching it.

301
00:18:26,620 --> 00:18:28,390
But there we go.

302
00:18:28,420 --> 00:18:29,290
It moved.

303
00:18:29,680 --> 00:18:30,550
Let's try again.

304
00:18:30,550 --> 00:18:32,680
And it appears to be working.

305
00:18:33,670 --> 00:18:35,920
So very, very entertaining game.

306
00:18:36,970 --> 00:18:38,100
But it's kind of fun.

307
00:18:38,110 --> 00:18:41,590
It's a little demo here and we get that fancy change of direction.

308
00:18:41,980 --> 00:18:48,160
We're halfway to like a very basic, basic game, except we don't have anything fun.

309
00:18:48,880 --> 00:18:49,510
All right.

310
00:18:49,510 --> 00:18:55,300
So if you wanted to, you could definitely refactor this a bit with the arrow down, arrow up, arrow

311
00:18:55,300 --> 00:18:56,400
right, arrow left.

312
00:18:56,410 --> 00:19:01,390
You could consider making an object to hold the different functions to call.

313
00:19:01,390 --> 00:19:05,560
You could make a function called move left, move right, move up, move down.

314
00:19:05,830 --> 00:19:06,940
That could be kind of fun.

315
00:19:09,250 --> 00:19:10,510
So here's one option.

316
00:19:10,570 --> 00:19:13,780
I'd make a couple of different functions called Move Up.

317
00:19:14,650 --> 00:19:20,320
Or we could even just call this move vertical and then we'll take the thing.

318
00:19:20,320 --> 00:19:24,130
So we'll call it element and then the amount.

319
00:19:27,540 --> 00:19:28,800
And what am I doing?

320
00:19:28,800 --> 00:19:30,540
I want this to be an arrow function.

321
00:19:30,870 --> 00:19:31,980
So we'll do that.

322
00:19:33,210 --> 00:19:39,540
And we would call this, for example, here, if we're trying to move down, we would do move vertical

323
00:19:40,590 --> 00:19:43,290
pass in our element that had moved.

324
00:19:43,290 --> 00:19:52,080
Let's just go with Avatar and then positive 50 and then here to move up, we could pass in -50.

325
00:19:53,550 --> 00:19:56,220
And we would basically move this logic in here.

326
00:19:56,220 --> 00:19:57,570
So four move vertical.

327
00:19:58,440 --> 00:20:02,940
We're going to do instead of Avatar, we'll do element, which is the parameter name.

328
00:20:03,120 --> 00:20:09,270
So this could work for any element that we're passing in, not just the Avatar element style top and

329
00:20:09,270 --> 00:20:15,810
then set element that style top to be current, top plus amount.

330
00:20:18,190 --> 00:20:19,510
And the moment of truth.

331
00:20:19,510 --> 00:20:21,190
Let's try deleting that.

332
00:20:21,520 --> 00:20:23,440
Let's see if up and down still work.

333
00:20:24,430 --> 00:20:25,840
It looks like they still work.

334
00:20:26,050 --> 00:20:27,810
So let's do the same thing.

335
00:20:27,820 --> 00:20:34,540
We'll make another function called move horizontal and you could make one to handle all of this.

336
00:20:34,630 --> 00:20:39,660
But I think this will help keep them a little shorter and easier to understand if you're looking over

337
00:20:39,670 --> 00:20:40,300
the code.

338
00:20:40,330 --> 00:20:47,520
So here we want current left equals extract element dot style dot left element.

339
00:20:47,530 --> 00:20:51,940
That style left equals curr left plus amount.

340
00:20:52,480 --> 00:20:54,340
And then we'll just call it.

341
00:20:56,010 --> 00:20:58,980
If we're moving to the right, we want to add 50.

342
00:20:59,610 --> 00:21:03,390
We'll pass an avatar, make sure we're calling move horizontal.

343
00:21:04,610 --> 00:21:09,170
And then the same thing for the left, except we'll do -50.

344
00:21:10,930 --> 00:21:11,600
Okay.

345
00:21:12,280 --> 00:21:13,300
Let's try it.

346
00:21:14,350 --> 00:21:15,520
It still works.

347
00:21:15,550 --> 00:21:22,300
Oh, except I deleted that one part where we flipped our avatar, so I guess I'll undo that for a moment.

348
00:21:23,630 --> 00:21:24,950
I got too eager there.

349
00:21:25,850 --> 00:21:26,990
We'll do it like this.

350
00:21:27,290 --> 00:21:33,720
So move horizontal avatar, -50 and then set the scale to negative one, comma one.

351
00:21:33,740 --> 00:21:37,160
Here, we'll set it back to one, comma, one.

352
00:21:37,520 --> 00:21:37,940
Does it work?

353
00:21:37,940 --> 00:21:39,170
Now to the right.

354
00:21:39,170 --> 00:21:40,080
To the left.

355
00:21:40,100 --> 00:21:40,760
Down.

356
00:21:40,760 --> 00:21:41,390
Up.

357
00:21:41,540 --> 00:21:42,320
Awesome.

358
00:21:42,560 --> 00:21:44,960
And if we touch the coin, finally.

359
00:21:45,080 --> 00:21:46,240
Pursuit of money.

360
00:21:46,300 --> 00:21:46,620
Uh.

361
00:21:47,400 --> 00:21:49,340
You have to keep going.

362
00:21:49,370 --> 00:21:50,440
Maybe more money.

363
00:21:50,450 --> 00:21:51,800
Maybe I'll be happier now.

364
00:21:52,040 --> 00:21:52,700
Nope.

365
00:21:52,730 --> 00:21:53,900
How about over here?

366
00:21:54,770 --> 00:21:56,030
I think this is the one.

367
00:21:56,960 --> 00:21:59,180
If I just make a little bit more.

368
00:21:59,210 --> 00:22:00,380
Get that treasure.

369
00:22:01,630 --> 00:22:02,520
Oh, man.

370
00:22:02,530 --> 00:22:02,800
All right.

371
00:22:02,800 --> 00:22:03,580
Next time.

372
00:22:03,790 --> 00:22:04,290
Awesome.

373
00:22:04,300 --> 00:22:10,500
So if you want some extra features that you could add, definitely one would be a score count or a scorekeeper.

374
00:22:10,660 --> 00:22:16,090
Just a little chart up top or even just a paragraph in H one that tells you how many times you've collected

375
00:22:16,090 --> 00:22:16,600
this.

376
00:22:16,780 --> 00:22:21,880
Also, you could create a whole bunch of coins, different coins, different values, give them a different

377
00:22:21,880 --> 00:22:22,570
color.

378
00:22:22,960 --> 00:22:24,940
You could do that with a CSS filter.

379
00:22:25,120 --> 00:22:28,570
You can make some of the coins larger to make them worth five.

380
00:22:28,600 --> 00:22:31,690
You could also have the coins move if you wanted to get fancier.

381
00:22:31,690 --> 00:22:35,800
But if you're going to do a bunch of animations, I would look into canvas to make something a little

382
00:22:35,800 --> 00:22:37,570
bit more or a lot more performance.

383
00:22:38,020 --> 00:22:38,500
All right.

384
00:22:38,500 --> 00:22:43,090
So that was mainly just about the arrow keys, but I thought it'd be fun to put something together where

385
00:22:43,090 --> 00:22:48,460
we're using a lot of the stuff we've seen, events we're talking about selecting, we're talking about

386
00:22:48,460 --> 00:22:51,850
style properties, creating elements already.

