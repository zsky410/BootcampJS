1
00:00:00,770 --> 00:00:04,910
In the last video, we started to discuss some architecture inside of our application, and we eventually

2
00:00:04,910 --> 00:00:09,710
settled on saying that rather than having a block of code that alternates responsibility of just about

3
00:00:09,710 --> 00:00:14,900
every line, we're going to instead try to create one solid block that is 100% concerned around the

4
00:00:14,900 --> 00:00:20,120
timer, and then that block of code will eventually emit some events or call a callback or otherwise

5
00:00:20,120 --> 00:00:22,700
tell the outside world that something important just occurred.

6
00:00:22,940 --> 00:00:26,740
So in this video, we're going to start to focus on how we're going to actually implement this thing.

7
00:00:26,750 --> 00:00:29,960
How are we going to write out some code that actually does what you see right here?

8
00:00:30,500 --> 00:00:34,340
Well, to implement this, we're going to try to use a JavaScript class.

9
00:00:34,430 --> 00:00:38,150
We do not have to use a class to implement something like this.

10
00:00:38,150 --> 00:00:41,930
But I think that we're going to write out the code and you're going to agree with me that using a class

11
00:00:41,930 --> 00:00:44,690
for this timer is a really good use case.

12
00:00:44,690 --> 00:00:49,520
So we're going to get a good idea of how to use a class around DOM elements and how to actually do it

13
00:00:49,520 --> 00:00:50,300
effectively.

14
00:00:51,090 --> 00:00:51,420
Okay.

15
00:00:51,420 --> 00:00:56,010
So I sat down and thought up of a couple of different ways to design this time or class.

16
00:00:56,020 --> 00:00:59,430
I'm going to share with you one way that seems kind of good to me.

17
00:00:59,430 --> 00:01:01,680
So this is the way that we're going to implement our timer.

18
00:01:02,250 --> 00:01:04,170
So we're going to make a class called timer.

19
00:01:04,170 --> 00:01:08,160
And this class is 100% concerned with these elements right here.

20
00:01:08,160 --> 00:01:11,070
The numbers, the play button and the pause button.

21
00:01:11,280 --> 00:01:16,080
Class timer is not going to know anything about that animated order around the timer.

22
00:01:16,080 --> 00:01:20,580
Instead, class timer just knows about those three things right inside of the border.

23
00:01:22,290 --> 00:01:26,400
So on class timer, we're going to have a couple of different methods.

24
00:01:27,390 --> 00:01:32,340
These different methods are going to be invoked automatically whenever a user interacts with the timer

25
00:01:32,340 --> 00:01:32,820
elements.

26
00:01:32,820 --> 00:01:34,890
So like the numbers and the two buttons.

27
00:01:35,340 --> 00:01:39,960
So whenever a user clicks on the play button, we're going to call the start method.

28
00:01:40,290 --> 00:01:45,060
And so, as you guess, calling the START method is going to start up some internal timer or something

29
00:01:45,060 --> 00:01:45,750
like that.

30
00:01:46,460 --> 00:01:50,480
Whenever a user clicks on the pause button, we're going to run the pause method.

31
00:01:51,840 --> 00:01:56,790
Remember that in order to change the timer right here, a user can click on that thing and whenever

32
00:01:56,790 --> 00:01:59,010
they do, it's going to turn into a text input.

33
00:01:59,220 --> 00:02:03,330
And so we're going to say that whenever a user changes that text right there or changes the duration

34
00:02:03,330 --> 00:02:06,870
of the timer, we will call a method called on duration change.

35
00:02:06,990 --> 00:02:10,289
So that's a sign that, hey, the user just changed the duration of the timer.

36
00:02:10,919 --> 00:02:14,850
And then finally, we might also have a method on here called something like tic.

37
00:02:14,940 --> 00:02:17,430
And tic is essentially going to do what we said.

38
00:02:17,430 --> 00:02:18,630
These steps were right here.

39
00:02:18,630 --> 00:02:23,310
So essentially every single second or so or like half a second or something, we're going to need to

40
00:02:23,310 --> 00:02:25,850
run some code to update the state of the timer.

41
00:02:25,860 --> 00:02:28,980
So like change the actual number on there and all that kind of good stuff.

42
00:02:29,370 --> 00:02:31,850
And so that will be done inside of a tick method.

43
00:02:31,860 --> 00:02:36,510
So Tick is going to be called repeatedly over time, as long as the timer is counting down.

44
00:02:38,070 --> 00:02:39,520
So this is the general idea.

45
00:02:39,540 --> 00:02:44,190
We're going to have a class and certain things we click on or interact with are going to invoke different

46
00:02:44,190 --> 00:02:44,850
methods.

47
00:02:45,720 --> 00:02:49,170
Now, of course, at some point in time, we're going to have to make sure that we set up some event

48
00:02:49,170 --> 00:02:55,200
listeners and say, okay, whenever we click on that play button right there, we want to run the start

49
00:02:55,200 --> 00:02:55,770
method.

50
00:02:56,100 --> 00:03:01,470
So to set up these event listeners, we're going to say that our class timer is going to have a constructor

51
00:03:01,470 --> 00:03:02,190
function.

52
00:03:02,400 --> 00:03:04,050
Remember what a constructor function is.

53
00:03:04,050 --> 00:03:09,450
It's a very special function that gets called immediately whenever we create a new instance of a class.

54
00:03:10,260 --> 00:03:15,150
So we're going to say that whenever we create a class timer or an instance of timer, we're going to

55
00:03:15,150 --> 00:03:21,120
pass in a reference to some dumb element that's going to serve as that little text input right there

56
00:03:21,690 --> 00:03:23,850
as the second argument will pass in some.

57
00:03:24,470 --> 00:03:27,950
DOM element that will serve as the start button.

58
00:03:27,950 --> 00:03:32,630
And finally, it will pass in a third argument that's going to represent the pause button as well.

59
00:03:33,480 --> 00:03:36,190
And when I say duration, input, start button and pause button right there.

60
00:03:36,210 --> 00:03:38,390
All I'm saying is we're going to write a query selector.

61
00:03:38,400 --> 00:03:43,710
We're going to find the text input, the two play buttons, and we're going to pass those into the constructor

62
00:03:43,710 --> 00:03:46,950
so that our class essentially has a handle into the DOM.

63
00:03:46,950 --> 00:03:51,720
And whenever it needs to reach into the DOM and do something, it will have these variables close at

64
00:03:51,720 --> 00:03:52,290
hand.

65
00:03:54,480 --> 00:03:54,750
Okay.

66
00:03:54,780 --> 00:03:58,230
Now, once again, I just want to mention that if this stuff seems a little bit confusing right now,

67
00:03:58,230 --> 00:03:59,540
that is totally fine.

68
00:03:59,550 --> 00:04:05,280
This is really your first taste of seeing how to effectively use a class around dumb elements.

69
00:04:05,280 --> 00:04:09,540
So the first time you see this, it always looks a bit crazy, it always looks challenging.

70
00:04:09,540 --> 00:04:14,190
But I guarantee you, as soon as we start to write some code out, you're going to get a really good

71
00:04:14,190 --> 00:04:15,570
idea of what is going on.

72
00:04:16,649 --> 00:04:17,930
So let's take a pause right here.

73
00:04:17,940 --> 00:04:21,300
We're going to come back the next video and start to implement Class Timer.

