1
00:00:00,300 --> 00:00:00,810
All right.

2
00:00:00,810 --> 00:00:06,090
Now that we have all that housekeeping out of the way, all the HTML and CSS prerequisites, we can

3
00:00:06,090 --> 00:00:07,320
now dive into the DOM.

4
00:00:07,320 --> 00:00:08,410
Very fun stuff.

5
00:00:08,430 --> 00:00:12,180
We're going to start in this video with kind of a taste of the dom.

6
00:00:12,480 --> 00:00:14,760
I'm going to show you some code, different snippets.

7
00:00:14,760 --> 00:00:16,920
We'll play around and tweak a web page.

8
00:00:16,920 --> 00:00:22,680
And the goal is not for you to understand every line or remember it, because I'm showing you code that

9
00:00:22,680 --> 00:00:27,390
we'll see in this section later on or two sections from now, we're kind of looking ahead.

10
00:00:27,390 --> 00:00:29,280
So it's it's more of a sneak peek.

11
00:00:29,670 --> 00:00:30,330
Okay.

12
00:00:30,330 --> 00:00:38,730
So the document object model or the DOM is our window into HTML, CSS and the web page in general through

13
00:00:38,730 --> 00:00:39,480
JavaScript.

14
00:00:39,510 --> 00:00:43,020
It is our portal into the world of a web page.

15
00:00:43,020 --> 00:00:50,730
So we can write JavaScript that can figure out how many ones are on a page or how many inputs are in

16
00:00:50,730 --> 00:00:53,280
a form, or we can get the value from a form.

17
00:00:53,280 --> 00:00:57,090
If a user is typing into the form, we can change the value of a form.

18
00:00:57,090 --> 00:01:01,410
We could change images, make them bigger, we can change styles of anything.

19
00:01:01,410 --> 00:01:08,010
We could add animations, we can listen for clicks or drags or hovers or any sort of event that a user

20
00:01:08,010 --> 00:01:12,300
could trigger and then have some behavior that happens in response.

21
00:01:12,420 --> 00:01:17,340
A user clicks on a game piece and it will change color.

22
00:01:17,340 --> 00:01:23,400
Or if a user clicks and drags a chess piece when they drop that chess piece, you should check.

23
00:01:23,400 --> 00:01:24,930
We should write code that checks.

24
00:01:24,930 --> 00:01:25,890
Is it a valid move?

25
00:01:25,890 --> 00:01:29,040
If it is, then move that chess piece to the square.

26
00:01:29,340 --> 00:01:35,130
If there's a piece there already, then replace that piece and remove the captured piece from the board.

27
00:01:35,130 --> 00:01:41,040
We add logic in with JavaScript that controls, that interacts with, that reads and understands the

28
00:01:41,040 --> 00:01:42,480
contents of a page.

29
00:01:42,990 --> 00:01:49,770
And the key thing to understand about all of this is the object part document object model.

30
00:01:49,770 --> 00:01:55,080
When your web page loads up, whatever the web page is, this simple one that we were doing here in

31
00:01:55,080 --> 00:02:02,310
the last video, when it loads up, the browser is going to turn it into a bunch of objects, just JavaScript

32
00:02:02,310 --> 00:02:06,960
objects, and these objects are all constructed and put together to form the DOM.

33
00:02:06,960 --> 00:02:13,770
It is a virtual representation or a JavaScript representation of the content on a page and it consists

34
00:02:13,770 --> 00:02:15,690
of a bunch of JavaScript objects.

35
00:02:15,690 --> 00:02:22,080
So I probably spent way too long making this image, but we have HTML, CSS and some other stuff that

36
00:02:22,080 --> 00:02:28,050
goes in and the browser interprets it, it reads it and it creates the DOM for you.

37
00:02:28,050 --> 00:02:33,660
It spits out JavaScript objects representing the HTML and representing the CSS.

38
00:02:34,020 --> 00:02:36,510
So here's a simple example of what I'm talking about.

39
00:02:36,570 --> 00:02:43,080
If this was our HTML, a very simple web page, we have an H one, we have a UL, we have two lives.

40
00:02:43,080 --> 00:02:47,070
The browser will read this in which on its own doesn't mean anything.

41
00:02:47,070 --> 00:02:48,210
It's just text.

42
00:02:48,210 --> 00:02:49,620
It's text content.

43
00:02:49,620 --> 00:02:54,960
The whole job of the browser is to display it in a way that makes sense to humans, to make this larger,

44
00:02:54,960 --> 00:02:57,690
to make this a bullet point if it's inside of a UL.

45
00:02:58,200 --> 00:03:03,570
So the browser reads it, it does all of that, and at the same time it creates a virtual representation,

46
00:03:03,600 --> 00:03:06,450
a JavaScript object of the H one.

47
00:03:06,900 --> 00:03:12,090
There's another object for the UL, another object for the Li and another for the LI.

48
00:03:12,330 --> 00:03:14,460
So that's what this is representing over here.

49
00:03:14,460 --> 00:03:18,150
Each one of these little circles or nodes is an object.

50
00:03:18,570 --> 00:03:20,130
They're telling you that I'm an object.

51
00:03:20,130 --> 00:03:20,880
Me too.

52
00:03:20,910 --> 00:03:22,350
In case you had any doubts.

53
00:03:22,350 --> 00:03:23,580
So they're objects.

54
00:03:23,580 --> 00:03:26,280
And those objects have a bunch of different properties.

55
00:03:26,670 --> 00:03:32,640
The simplest one that we could see from here would be what their content is, what text is inside the

56
00:03:32,640 --> 00:03:34,590
object water plants.

57
00:03:35,010 --> 00:03:38,670
So we have one that has a property called text or something like that.

58
00:03:38,670 --> 00:03:41,460
It's actually called inner text set to water plants.

59
00:03:41,460 --> 00:03:47,040
We also have tons of other properties for different attributes, CSS styles.

60
00:03:47,040 --> 00:03:52,140
We have methods that we can use so that I could delete one of these with JavaScript and it would be

61
00:03:52,140 --> 00:03:53,670
deleted from my web page.

62
00:03:53,670 --> 00:03:56,370
I could update one of them and change the text.

63
00:03:56,370 --> 00:03:59,250
I could even change the type of element I could.

64
00:03:59,250 --> 00:04:02,940
Instead of having an H one, I could replace it with an H two.

65
00:04:03,360 --> 00:04:07,830
All of that is done through JavaScript where we interact with these objects.

66
00:04:07,830 --> 00:04:08,340
All right.

67
00:04:08,340 --> 00:04:13,410
So now for the part, that is the taste of the DOM, a little preview of where we're going.

68
00:04:13,410 --> 00:04:16,079
So I'm on Google.com, just a regular home page.

69
00:04:16,079 --> 00:04:18,300
I'm going to just type some code in the console.

70
00:04:18,300 --> 00:04:22,200
The first thing we'll see is proof that we get a bunch of objects.

71
00:04:22,200 --> 00:04:25,800
The DOM just consists of objects, so why don't we pick something?

72
00:04:25,800 --> 00:04:29,340
Maybe this button right here, it is an input.

73
00:04:29,340 --> 00:04:30,510
Does it have an ID?

74
00:04:31,290 --> 00:04:32,440
Uh, it doesn't have an idea.

75
00:04:32,560 --> 00:04:34,260
Okay, this one has an ID.

76
00:04:34,710 --> 00:04:36,450
Is this the I'm feeling lucky button?

77
00:04:36,930 --> 00:04:41,690
I'm going to copy this ID and use that to select that element.

78
00:04:41,700 --> 00:04:42,780
So this is new.

79
00:04:42,810 --> 00:04:43,860
We haven't seen it before.

80
00:04:43,860 --> 00:04:45,420
Or at least not in this course.

81
00:04:45,840 --> 00:04:46,980
Don't worry about it.

82
00:04:47,460 --> 00:04:51,000
I hate saying that, but don't don't stress about what it is.

83
00:04:51,900 --> 00:04:52,350
Okay.

84
00:04:52,350 --> 00:04:57,540
So if I save this to a variable const button object.

85
00:04:58,110 --> 00:05:05,400
If I look at that button object I've selected based off of some ID and I have a representation of it.

86
00:05:05,550 --> 00:05:09,090
Unfortunately, in the console, it looks like it's not an object.

87
00:05:09,090 --> 00:05:11,040
It looks like it's just HTML.

88
00:05:11,220 --> 00:05:19,170
But if I do console dot dear, which you've seen a couple of times, button object and open this up,

89
00:05:19,350 --> 00:05:22,500
you can see it's just a regular JavaScript object.

90
00:05:22,500 --> 00:05:27,900
It's massive, it has tons of properties, tons and tons of methods and properties here, and they all

91
00:05:27,900 --> 00:05:29,860
relate to this one button.

92
00:05:29,880 --> 00:05:31,440
Let's take a look at one of them.

93
00:05:31,440 --> 00:05:33,870
How about the value of the button?

94
00:05:33,900 --> 00:05:37,560
If I scroll down, go down to value, it's set to.

95
00:05:37,560 --> 00:05:38,730
I'm feeling lucky.

96
00:05:39,330 --> 00:05:43,020
We also have things like classes and IDs.

97
00:05:43,050 --> 00:05:45,810
If I go up to I, where are you?

98
00:05:46,320 --> 00:05:47,280
Okay, there we go.

99
00:05:47,310 --> 00:05:48,570
Here's the ID.

100
00:05:48,600 --> 00:05:50,460
We have attributes like hidden.

101
00:05:50,460 --> 00:05:52,260
So this is not a hidden element.

102
00:05:52,260 --> 00:05:53,730
So it's set to false.

103
00:05:54,180 --> 00:05:58,680
We have tons of other things that we're not going to get into right now, but you can see that it's

104
00:05:58,680 --> 00:06:04,320
an object and everything we see on this page is represented with its own JavaScript object.

105
00:06:04,530 --> 00:06:05,940
But let's start with this one.

106
00:06:05,940 --> 00:06:13,380
So we have our button object, and I can read the value of that button, which is I'm feeling lucky.

107
00:06:13,500 --> 00:06:15,150
I could also change it.

108
00:06:15,150 --> 00:06:16,890
I could set it to something else.

109
00:06:17,430 --> 00:06:19,770
I am not lucky.

110
00:06:19,800 --> 00:06:20,730
Does anybody use the.

111
00:06:20,730 --> 00:06:21,810
I'm feeling lucky.

112
00:06:22,380 --> 00:06:23,310
I haven't.

113
00:06:24,180 --> 00:06:25,350
Not on purpose at least.

114
00:06:25,350 --> 00:06:27,450
And we can see we just changed it.

115
00:06:27,450 --> 00:06:29,370
It now says I am not lucky.

116
00:06:29,610 --> 00:06:31,950
So that's our first interaction with the Dom.

117
00:06:31,950 --> 00:06:38,070
The page loaded, all this HTML was turned into stuff we see visually and at the same time it was turned

118
00:06:38,070 --> 00:06:39,630
into JavaScript objects.

119
00:06:39,630 --> 00:06:42,690
We can select and interact with those objects.

120
00:06:42,690 --> 00:06:44,910
We can change them in JavaScript.

121
00:06:44,910 --> 00:06:50,910
It's just like if I had an object here where I had a value set to four, just call this.

122
00:06:50,910 --> 00:06:56,010
Oh, and then I said zero value is now equal to 56.

123
00:06:56,670 --> 00:07:01,470
The main difference, of course, is that when I change zero value, nothing happens.

124
00:07:01,710 --> 00:07:04,290
Oh is different, but there's no side effect.

125
00:07:04,290 --> 00:07:06,420
The browser doesn't care, it's not changed.

126
00:07:06,420 --> 00:07:10,320
But when I change one of these objects from the DOM, there is an impact.

127
00:07:10,320 --> 00:07:12,480
It's reflected in what we see.

128
00:07:12,480 --> 00:07:18,120
So changing this JavaScript object is linked to seeing that change in the page.

129
00:07:18,210 --> 00:07:23,820
So when we change a style, when we change the text, when we add new elements, we do it through JavaScript

130
00:07:23,820 --> 00:07:26,430
objects and then the browser knows about it.

131
00:07:26,430 --> 00:07:28,290
The browser knows, Hey, this thing just changed.

132
00:07:28,290 --> 00:07:32,910
I better update it for the user or in the browser so that we can see that change.

133
00:07:33,000 --> 00:07:35,430
And we'll try one more fun, mildly fun thing.

134
00:07:35,430 --> 00:07:37,140
Not, not exceedingly fun.

135
00:07:37,680 --> 00:07:39,570
We're going to add an event.

136
00:07:39,570 --> 00:07:46,320
So when I hover over this button, I want to console.log something or change the text, although it's

137
00:07:46,320 --> 00:07:50,730
already being changed here we get this nice animation that's from Google.

138
00:07:51,180 --> 00:07:52,200
We're not going to deal with it.

139
00:07:52,200 --> 00:07:59,280
So why don't we just start by alerting something so we have our button object BTN obj and again this

140
00:07:59,280 --> 00:08:02,910
is something we haven't seen before, but we will see it.

141
00:08:02,910 --> 00:08:04,740
So we're not going to go into detail here.

142
00:08:04,740 --> 00:08:11,160
But this says Add an event listener, whoops, add event listener to the button.

143
00:08:11,250 --> 00:08:13,890
The event we're listening for is a mouse over.

144
00:08:13,890 --> 00:08:16,050
And then here's the function I want to run.

145
00:08:16,050 --> 00:08:19,290
When I do mouse over and I'll just do an alert.

146
00:08:20,070 --> 00:08:20,730
Hi.

147
00:08:22,360 --> 00:08:22,840
Okay.

148
00:08:23,680 --> 00:08:24,700
Let's see what happens.

149
00:08:24,700 --> 00:08:25,370
There we go.

150
00:08:25,390 --> 00:08:30,400
I get high every time I hover over that button anywhere else.

151
00:08:30,400 --> 00:08:31,210
It doesn't change.

152
00:08:31,210 --> 00:08:31,990
Nothing happens.

153
00:08:31,990 --> 00:08:33,280
But I go over that button.

154
00:08:33,280 --> 00:08:37,510
We get a nice alert so we could replace that code with anything else.

155
00:08:37,600 --> 00:08:38,919
Usually we don't alert.

156
00:08:38,950 --> 00:08:41,950
We might change the content of the button.

157
00:08:41,950 --> 00:08:42,580
We might.

158
00:08:42,580 --> 00:08:43,799
Instead, we could.

159
00:08:43,809 --> 00:08:44,770
I mean, we could do anything.

160
00:08:44,770 --> 00:08:47,650
We could change the color, we could add new elements to the page.

161
00:08:47,650 --> 00:08:50,050
We could delete every single thing from the page.

162
00:08:50,050 --> 00:08:51,460
We could animate things.

163
00:08:51,460 --> 00:08:54,970
We could send a request to get information from an API.

164
00:08:55,330 --> 00:08:59,500
It doesn't matter what we do, but the point here is that we can do it.

165
00:08:59,500 --> 00:09:05,740
We can run code when an event happens or when it occurs based off of a particular element in this case,

166
00:09:05,740 --> 00:09:06,580
that button.

167
00:09:06,940 --> 00:09:09,190
So we will get to events in due time.

168
00:09:09,190 --> 00:09:13,600
First, we've got to start with the basics of the DOM and in the next video, I'm actually going to

169
00:09:13,600 --> 00:09:18,940
do one more kind of fun demo where we're really going to just wreck this home page for Google.

170
00:09:18,970 --> 00:09:24,070
We're going to animate everything so that it just randomly bounces around and rotates.

171
00:09:24,070 --> 00:09:28,300
It's going to be kind of fun, maybe, but if you don't feel like watching that, you just want to get

172
00:09:28,300 --> 00:09:30,790
to code and you want to start from the beginning.

173
00:09:30,790 --> 00:09:32,530
That will be two videos from now.

174
00:09:32,530 --> 00:09:36,100
The next video is just another taste of the DOM Part two.

175
00:09:36,700 --> 00:09:37,090
All right.

176
00:09:37,090 --> 00:09:42,880
So to summarize everything we saw here, the DOM document object model is just a bunch of objects,

177
00:09:42,880 --> 00:09:44,260
plain old JavaScript objects.

178
00:09:44,260 --> 00:09:49,690
We've worked with them before, but not ones this large, not ones that have so many methods and properties.

179
00:09:49,690 --> 00:09:54,550
These are made by the browser based off of the incoming content, the HTML and CSS.

180
00:09:54,580 --> 00:09:56,380
Other information about a web page.

181
00:09:56,380 --> 00:10:02,020
It's all turned into a JavaScript representation of objects that we can use, we can interact with,

182
00:10:02,020 --> 00:10:03,100
and we can change.

