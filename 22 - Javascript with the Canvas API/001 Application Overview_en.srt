1
00:00:00,820 --> 00:00:04,030
All right, my friends, in this video, we're going to start working on our next project now.

2
00:00:04,030 --> 00:00:08,500
I'm really excited about this next project because it's a little bit different than anything else we've

3
00:00:08,500 --> 00:00:11,200
done in this course or anything else that we will do.

4
00:00:11,200 --> 00:00:13,300
So let's talk about what we're going to be building.

5
00:00:13,960 --> 00:00:14,320
All right.

6
00:00:14,320 --> 00:00:19,210
So we're going to be making a little maze game that is going to run directly inside the browser.

7
00:00:19,210 --> 00:00:23,890
So when a user starts up our application, we're going to show them a maze like the one you see right

8
00:00:23,890 --> 00:00:24,430
here.

9
00:00:24,850 --> 00:00:30,280
A user is then going to manipulate a little ball like that blue one right there to move it around the

10
00:00:30,280 --> 00:00:35,740
maze until eventually gets to some target location, specifically this green square on the bottom left

11
00:00:35,740 --> 00:00:36,520
hand corner.

12
00:00:36,940 --> 00:00:43,990
So a user is going to have to use the W, A and D keys on their keyboard to move the ball around like

13
00:00:43,990 --> 00:00:47,170
so and then eventually touch that green square.

14
00:00:47,170 --> 00:00:49,180
And as soon as they do, they're going to win.

15
00:00:49,540 --> 00:00:50,350
So that's it.

16
00:00:50,350 --> 00:00:51,700
That's what we're going to be building.

17
00:00:51,700 --> 00:00:55,240
Now, this is not obviously a traditional web application.

18
00:00:55,240 --> 00:00:57,130
This is much more like a game.

19
00:00:57,490 --> 00:01:01,900
The thing I really want to focus in on this game that we're going to build is some of the data structures

20
00:01:01,900 --> 00:01:04,269
that we're going to use to actually generate the maze.

21
00:01:04,769 --> 00:01:08,770
Let's have a quick discussion and highlight some of the big challenges we're going to run into as we

22
00:01:08,770 --> 00:01:09,880
start working on this.

23
00:01:11,170 --> 00:01:11,440
Okay.

24
00:01:11,440 --> 00:01:15,850
So some of these are probably going to be pretty obvious when it comes to challenges of building this

25
00:01:15,850 --> 00:01:16,240
app.

26
00:01:16,660 --> 00:01:20,590
So the first big thing we're going to run into is how do we generate a maze at all?

27
00:01:20,620 --> 00:01:22,560
We're going to be building the maze from scratch.

28
00:01:22,570 --> 00:01:25,270
We're going to write the code to actually form that thing up.

29
00:01:25,390 --> 00:01:29,160
So we need to make sure that our maze has some valid solution.

30
00:01:29,170 --> 00:01:32,890
It also has to, you know, have some level of difficulty to it.

31
00:01:34,230 --> 00:01:38,130
The next thing we're going to have to think about is how we're going to draw that maze on the screen.

32
00:01:38,160 --> 00:01:43,440
So are we going to use traditional HTML elements or are we going to figure out some other method or

33
00:01:43,440 --> 00:01:44,370
solution out?

34
00:01:45,300 --> 00:01:50,010
We also have to make sure that we can somehow get the keyboard keys to control that ball as well.

35
00:01:50,040 --> 00:01:55,410
So whenever a user presses W, A, S or D on their keyboard, we're going to move the ball up, left,

36
00:01:55,410 --> 00:01:56,490
down or right.

37
00:01:57,570 --> 00:02:02,190
And then finally, we need to somehow detect when the ball touches that green square on the bottom right

38
00:02:02,190 --> 00:02:02,820
corner.

39
00:02:03,550 --> 00:02:07,300
So for each of these challenges, let's talk about a solution very briefly.

40
00:02:07,990 --> 00:02:10,780
The first big issue is how do we generate a maze?

41
00:02:11,170 --> 00:02:15,100
Well, there are many different algorithms out there to use to generate a maze.

42
00:02:15,130 --> 00:02:19,300
We're going to use a pretty simple and straightforward algorithm to generate our maze.

43
00:02:19,300 --> 00:02:23,890
But we are still going to have to learn a little bit about a data structure called a tree.

44
00:02:24,080 --> 00:02:27,970
We're going to also have to write out a little bit of code for recursion as well.

45
00:02:28,210 --> 00:02:32,890
So that's where we're going to kind of get pretty far down into the weeds and learn how to build the

46
00:02:32,890 --> 00:02:33,520
maze.

47
00:02:34,490 --> 00:02:36,520
You actually draw the maze on the screen?

48
00:02:36,530 --> 00:02:40,120
We're going to use a JavaScript library called Matter JS.

49
00:02:40,580 --> 00:02:45,110
Matter JS is used to draw or kind of simulate physical elements.

50
00:02:45,110 --> 00:02:52,850
So like a ball or a board or a spring or whatever else it might be best to just take a look at the documentation

51
00:02:52,850 --> 00:02:53,660
from outer space.

52
00:02:53,690 --> 00:02:55,970
You can find it at this link right here.

53
00:02:56,480 --> 00:02:59,630
I'm going to open up a new tab right away and visit it.

54
00:03:01,370 --> 00:03:06,050
And once you go here, you're going to see several different physics demos right here on the main screen.

55
00:03:07,090 --> 00:03:13,660
You can also click on See all demos and if you on this page find the dropdown at the top, you can select

56
00:03:13,660 --> 00:03:15,460
all the different demos they have available.

57
00:03:15,580 --> 00:03:21,370
So for example, I'll check out Double Pendulum and there we go about Stack.

58
00:03:21,700 --> 00:03:22,270
There we go.

59
00:03:22,270 --> 00:03:25,810
And you'll notice that a lot of these you can actually click and drag these elements around.

60
00:03:26,780 --> 00:03:31,460
So we're going to be using meter jazz and we're going to learn a pretty good amount about it to actually

61
00:03:31,460 --> 00:03:33,800
implement the maze and all this other kind of stuff.

62
00:03:35,530 --> 00:03:38,710
Next up, how do we actually have the keyboard keys, control the ball?

63
00:03:38,740 --> 00:03:44,080
Well, we're making use of matter DJs and that this library has the ability to map some key presses

64
00:03:44,080 --> 00:03:49,180
to the movement of some shape or element on the screen being drawn by this library.

65
00:03:50,100 --> 00:03:53,770
Finally, how do we detect whenever the bulb touches the Green Square?

66
00:03:53,790 --> 00:03:54,390
Once again?

67
00:03:54,390 --> 00:04:00,930
Mataji It gives us the ability to detect collisions between different shapes or different objects inside

68
00:04:00,930 --> 00:04:01,680
of our app.

69
00:04:02,100 --> 00:04:07,530
So we should be able to write some code that's going to detect whenever the blue ball collides with

70
00:04:07,530 --> 00:04:08,430
the green square.

71
00:04:08,430 --> 00:04:11,130
And again, that's going to be essentially our win condition.

72
00:04:12,020 --> 00:04:12,210
Okay.

73
00:04:12,320 --> 00:04:16,839
So again, just a couple of big things for us to think about as we are starting this thing off.

74
00:04:16,850 --> 00:04:18,230
So let's take a quick pause right here.

75
00:04:18,230 --> 00:04:19,279
We'll come back the next video.

76
00:04:19,279 --> 00:04:23,660
We're going to do a little bit of initial project setup and then immediately start writing some code

77
00:04:23,660 --> 00:04:26,300
to get a better idea of how matter JZ works.

