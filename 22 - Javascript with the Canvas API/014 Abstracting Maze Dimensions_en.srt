1
00:00:00,560 --> 00:00:04,820
At the end of the last video, I mentioned how we've got some hardcoded values inside of here of threes

2
00:00:04,820 --> 00:00:05,570
and twos.

3
00:00:05,870 --> 00:00:10,600
So the values that we currently have inside of here work perfectly for a three by three maze.

4
00:00:10,700 --> 00:00:14,210
Okay, I've really drawn the heck out of this thing, but you get the idea it only works for a three

5
00:00:14,210 --> 00:00:15,170
by three maze.

6
00:00:15,440 --> 00:00:19,610
So if we ever wanted to have some different dimensions for our maze, well, we would have to go back

7
00:00:19,610 --> 00:00:22,400
through and start to update all these different values by hand.

8
00:00:22,400 --> 00:00:27,020
And I can just about guarantee you that we would make a typo somewhere and end up breaking our code.

9
00:00:27,410 --> 00:00:32,570
So I think that we should abstract out these different numbers into a configuration variable.

10
00:00:32,960 --> 00:00:34,880
So I'm going to go back up to the very top of the file.

11
00:00:36,620 --> 00:00:40,130
And I'm going to create a new variable that I'll call cells.

12
00:00:40,940 --> 00:00:42,850
I'm going to start this off as three.

13
00:00:43,620 --> 00:00:49,170
Now the value cells right here is talking about either the number of cells in the horizontal edge or

14
00:00:49,170 --> 00:00:50,490
the vertical edge.

15
00:00:50,730 --> 00:00:55,230
So for right now, we're going to imagine that the variable cells is talking about the number of cells

16
00:00:55,230 --> 00:01:00,180
either that way or that way, because all of our mazes right now are going to be square.

17
00:01:00,210 --> 00:01:02,790
It doesn't really matter which dimension we're talking about.

18
00:01:03,000 --> 00:01:06,600
Again, we are going to eventually allow the creation of mazes that are not square.

19
00:01:06,600 --> 00:01:08,850
So like a three by five.

20
00:01:08,880 --> 00:01:11,490
But right now, everything we create will be square.

21
00:01:12,150 --> 00:01:16,170
So calling that variable cells right now is more or less okay.

22
00:01:16,320 --> 00:01:20,310
But another engineer, if they looked at this, they might think that this is the total number of cells

23
00:01:20,310 --> 00:01:20,930
that we have.

24
00:01:20,940 --> 00:01:23,400
So the name isn't the best thing in the world.

25
00:01:23,700 --> 00:01:24,360
Whatever.

26
00:01:24,360 --> 00:01:28,830
We are going to change that in just a little bit as soon as we add support for rectangular mazes.

27
00:01:30,350 --> 00:01:35,810
So now we can use that variable to go back down and replace all the hardcoded numbers we have inside

28
00:01:35,810 --> 00:01:36,290
of here.

29
00:01:36,890 --> 00:01:38,990
So, for example, I can find three.

30
00:01:39,290 --> 00:01:40,640
Change it to cells.

31
00:01:41,900 --> 00:01:43,580
Change to cells.

32
00:01:43,880 --> 00:01:44,840
Cells.

33
00:01:46,150 --> 00:01:47,260
And cells.

34
00:01:48,110 --> 00:01:49,980
And the two values of two.

35
00:01:50,000 --> 00:01:53,780
Well, as you might guess, those are just going to be cells minus one.

36
00:01:56,710 --> 00:02:00,910
So now you should not have any values of two or three inside of here at all.

37
00:02:01,780 --> 00:02:06,700
One good thing to test right now would be to try to change the value of cells and then console.log out

38
00:02:06,700 --> 00:02:10,270
our grid verticals and horizontals and just to make sure that they still make sense.

39
00:02:10,900 --> 00:02:15,460
So I'm going to try to increase the value of cells to five instead.

40
00:02:17,100 --> 00:02:18,270
I'll then go back down.

41
00:02:18,660 --> 00:02:21,360
I'm going to change the council log to take a look at the grid.

42
00:02:21,840 --> 00:02:25,970
So when I now console.log the grid, I would expect to see a grid of five by five.

43
00:02:25,980 --> 00:02:29,970
So five inner arrays, each of which have five elements inside them.

44
00:02:30,950 --> 00:02:32,450
So if I go back and refresh?

45
00:02:32,450 --> 00:02:32,870
Yep.

46
00:02:32,870 --> 00:02:34,880
There is a five by five, without a doubt.

47
00:02:36,730 --> 00:02:40,450
I can also do the same thing for verticals and refresh.

48
00:02:41,320 --> 00:02:41,620
Yup.

49
00:02:41,620 --> 00:02:42,910
That definitely looks correct.

50
00:02:45,080 --> 00:02:47,060
And I can do the same thing with horizontals.

51
00:02:48,720 --> 00:02:51,230
And I've got a four by five also looks correct.

52
00:02:51,240 --> 00:02:56,070
Now, if you want to, this is a good spot to pull out your pen and paper and draw out what a five by

53
00:02:56,070 --> 00:02:58,280
five maze would actually look like.

54
00:02:58,290 --> 00:03:04,400
And then just make sure that we actually do have the correct dimensions on the verticals and the horizontals

55
00:03:04,410 --> 00:03:05,070
arrays.

56
00:03:05,490 --> 00:03:08,670
So I'm not going to flip back over and mangle my diagram anymore.

57
00:03:08,670 --> 00:03:11,700
I'll let you do that just in case you want to double check those values.

58
00:03:12,540 --> 00:03:14,580
But I think overall this is looking good.

59
00:03:14,910 --> 00:03:20,100
So now we can start to write in some code after these arrays right here where we're going to essentially

60
00:03:20,190 --> 00:03:25,260
walk through that grid, pick those random cells and figure out exactly how we're going to remove all

61
00:03:25,260 --> 00:03:30,120
those walls from the verticals and horizontals arrays so quick, because we'll start that up in the

62
00:03:30,120 --> 00:03:30,870
next video.

