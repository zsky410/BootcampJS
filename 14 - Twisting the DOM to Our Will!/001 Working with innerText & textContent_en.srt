1
00:00:00,210 --> 00:00:01,290
Hey, welcome back.

2
00:00:01,320 --> 00:00:06,450
Now that we've seen step one of this process where we select elements, we saw a bunch of different

3
00:00:06,450 --> 00:00:10,050
methods that we can use to select elements once we have them.

4
00:00:10,050 --> 00:00:14,670
Once we have selected them, we usually want to do something with them instead of just putting them

5
00:00:14,670 --> 00:00:17,730
in variables for no reason or conflict logging them.

6
00:00:17,730 --> 00:00:20,310
Typically we manipulate them in some way.

7
00:00:20,340 --> 00:00:25,890
Manipulation is it's not exactly the best term because sometimes we are manipulating the elements.

8
00:00:25,890 --> 00:00:31,170
We might be changing their styles, we might be inserting a new element inside of them, we might be

9
00:00:31,170 --> 00:00:35,040
removing that element, but other times we're just accessing data.

10
00:00:35,040 --> 00:00:37,500
And that's not I wouldn't call that manipulation.

11
00:00:37,500 --> 00:00:43,680
We're just trying to figure out what is the contents of this div or what number did the user just click

12
00:00:43,680 --> 00:00:49,440
on or what what information is in the form that is more accessing?

13
00:00:49,440 --> 00:00:51,750
And we're also going to cover that in this section.

14
00:00:51,870 --> 00:00:54,480
So manipulation is just the umbrella term.

15
00:00:54,480 --> 00:01:00,120
The unfortunate thing about the DOM is when you're learning it, you take a look at any document or

16
00:01:00,120 --> 00:01:01,590
any element that you select.

17
00:01:01,590 --> 00:01:05,940
There are so many properties, so many methods, as we've already seen a couple of times.

18
00:01:05,940 --> 00:01:10,770
It definitely can be overwhelming, but we're going to narrow it down to some of the most important

19
00:01:10,770 --> 00:01:12,750
methods in properties you need to know.

20
00:01:12,810 --> 00:01:18,900
And these are the ones that nine, more than nine times out of ten probably, I don't know, 48 times

21
00:01:18,900 --> 00:01:21,390
out of 50, I guess I could reduce down.

22
00:01:21,390 --> 00:01:24,750
Let's just say most of the time you end up using these methods.

23
00:01:24,750 --> 00:01:31,170
These are the methods and properties that we use to style elements, to create new elements, to change

24
00:01:31,170 --> 00:01:34,650
attributes, to add a class to an element or remove a class.

25
00:01:34,650 --> 00:01:38,640
There are so many different things that we do this subset of methods and properties.

26
00:01:38,640 --> 00:01:39,300
What do we have?

27
00:01:39,300 --> 00:01:41,070
Like 18, maybe 20?

28
00:01:41,070 --> 00:01:47,880
This subset is the majority of what you'll need to make most projects and to get by using the DOM.

29
00:01:48,120 --> 00:01:51,480
So in this section we're going to just take these piece by piece.

30
00:01:51,480 --> 00:01:57,480
We're going to start in this video by talking about accessing text from an element, how do we get the

31
00:01:57,480 --> 00:01:58,860
contents of an element?

32
00:01:58,860 --> 00:02:03,270
So we're going to focus on this corner here in our text and text content.

33
00:02:03,840 --> 00:02:04,320
All right.

34
00:02:04,320 --> 00:02:06,780
So I'm working with this same dummy web page.

35
00:02:06,780 --> 00:02:07,710
It doesn't matter.

36
00:02:07,710 --> 00:02:09,000
I'm just doing something simple.

37
00:02:09,000 --> 00:02:12,180
But this applies to any any Web page you could open.

38
00:02:12,180 --> 00:02:13,630
We could do it on MDM.

39
00:02:13,680 --> 00:02:15,060
We could do it on Wikipedia.

40
00:02:15,060 --> 00:02:18,870
On Facebook, although I just wouldn't want to show you my Facebook account.

41
00:02:18,870 --> 00:02:24,600
But we could we open up the console or we run code from a script where we select an element.

42
00:02:24,600 --> 00:02:25,890
So why don't we start there?

43
00:02:26,070 --> 00:02:27,750
Let's select this h one.

44
00:02:27,750 --> 00:02:29,100
So how do we select it?

45
00:02:29,940 --> 00:02:33,990
Document dot and we have a bunch of options, but I'm going to do query selector.

46
00:02:34,020 --> 00:02:37,290
There's only 1h1 and I want the first one anyway.

47
00:02:37,290 --> 00:02:38,250
So we'll do this.

48
00:02:38,250 --> 00:02:44,400
We'll save it to a variable const h one and the first property we'll see is called inner text.

49
00:02:44,400 --> 00:02:49,860
So inner text is going to give me the text that is in between the tags right there.

50
00:02:49,860 --> 00:02:53,250
So here's the opening edge one, here's the closing inner text.

51
00:02:53,250 --> 00:02:54,690
Is this right there?

52
00:02:54,840 --> 00:02:58,200
So that's how it behaves on a simple element, like an H one.

53
00:02:58,200 --> 00:03:00,840
But what if we have content nested inside?

54
00:03:01,050 --> 00:03:03,030
Let's see if we have a good example of this.

55
00:03:03,480 --> 00:03:04,530
Scroll down.

56
00:03:04,530 --> 00:03:10,680
We do have this ul if I were to run ul inner text, let's see what we get.

57
00:03:10,680 --> 00:03:14,160
So I'm going to select the UL with my query selector.

58
00:03:15,100 --> 00:03:17,920
On ULL there's only well there's multiple actually.

59
00:03:18,220 --> 00:03:23,830
So we'll just take the first one because all the wells have allies inside and then we'll call this variable

60
00:03:23,830 --> 00:03:24,550
UL.

61
00:03:24,850 --> 00:03:29,560
So if I do ul inter text, here's what we get.

62
00:03:29,980 --> 00:03:32,320
First thing, second thing, third thing.

63
00:03:32,830 --> 00:03:35,200
So this was the UL that we selected.

64
00:03:35,470 --> 00:03:41,830
You can see it highlighted when I type UL and my console and the text that was located inside of it

65
00:03:41,830 --> 00:03:42,710
was nested.

66
00:03:42,730 --> 00:03:45,430
It's not a direct child of the UL.

67
00:03:45,460 --> 00:03:46,820
It's inside of an ally.

68
00:03:46,840 --> 00:03:49,270
So we have carrots, we have peas, we have broccoli.

69
00:03:49,270 --> 00:03:52,390
Or actually we have first thing, second thing and third thing.

70
00:03:52,390 --> 00:03:58,780
They're not directly located in the UL their first inside of an ly, but when we use inner text on an

71
00:03:58,780 --> 00:04:01,660
element, we get all of the text inside of it.

72
00:04:01,870 --> 00:04:07,610
So we could also do this document body, which is a reference to the entire body.

73
00:04:07,630 --> 00:04:12,100
We don't have to do query selector of body, although that should work.

74
00:04:12,100 --> 00:04:15,090
I've never done that before, but I'm sure that does work.

75
00:04:15,100 --> 00:04:15,580
Yeah.

76
00:04:15,940 --> 00:04:18,990
But we have a shortcut which is just document body.

77
00:04:19,000 --> 00:04:21,190
It's a property that's always on the document.

78
00:04:21,190 --> 00:04:26,100
And if I do enter text on that, we get all of the text from my web page.

79
00:04:26,110 --> 00:04:31,360
It doesn't matter how many elements deep it is, if it's buried or nested down, it extracts all the

80
00:04:31,360 --> 00:04:31,870
text.

81
00:04:31,870 --> 00:04:33,850
So this is the text from my web page.

82
00:04:34,510 --> 00:04:36,460
Now reading inner text is great.

83
00:04:36,460 --> 00:04:38,290
That's useful sometimes.

84
00:04:38,290 --> 00:04:42,130
But also we can change elements, we can manipulate the text.

85
00:04:42,130 --> 00:04:44,260
It's just another property on an object.

86
00:04:44,260 --> 00:04:48,130
And if we change it, the browser is going to update to reflect that.

87
00:04:48,130 --> 00:04:50,230
So we have our H one enter text.

88
00:04:50,410 --> 00:04:55,810
If I want to change it, I can change it to how about I'm hungry?

89
00:04:55,960 --> 00:04:57,280
Let's do double quotes.

90
00:04:58,000 --> 00:04:58,930
I'm hungry.

91
00:04:59,780 --> 00:05:01,850
And there we go, it updated.

92
00:05:02,180 --> 00:05:04,850
Now, this change obviously is in the console.

93
00:05:04,850 --> 00:05:05,660
It's not permanent.

94
00:05:05,660 --> 00:05:07,760
If I were to refresh my page, it's gone.

95
00:05:07,910 --> 00:05:14,090
I could add it to a script like I have over here, and then it would run each time and I would see it.

96
00:05:14,270 --> 00:05:19,520
But it's kind of silly to update the inner text of an H one as soon as the page loads.

97
00:05:19,520 --> 00:05:21,830
Why not just update the HTML?

98
00:05:22,070 --> 00:05:26,930
But that's where events come in, where we can update something based off of an event, a user clicking

99
00:05:26,930 --> 00:05:27,560
a hover.

100
00:05:27,560 --> 00:05:30,680
For now, we're just learning the basics of changing elements.

101
00:05:30,680 --> 00:05:32,510
So that's the basics of inner text.

102
00:05:32,510 --> 00:05:39,830
If I were to do something like document, body or any element, let's do the ul ul dot inner text.

103
00:05:39,830 --> 00:05:46,100
Remember that the UL has nested content inside, it has allies and this text is coming from the allies.

104
00:05:46,100 --> 00:05:53,030
If I do ul inner text equals I am a big UL and I hit enter.

105
00:05:53,600 --> 00:05:55,220
All of that stuff is gone.

106
00:05:55,520 --> 00:06:00,050
So what we had originally was this we had a UL with three allies.

107
00:06:00,140 --> 00:06:06,710
When I change inner text, even though the inner text we see is only this, we're not seeing those elements.

108
00:06:06,710 --> 00:06:10,880
When I set inner text on something, it just puts the text right there.

109
00:06:11,300 --> 00:06:17,090
So not a great idea to do that if you're actually trying to preserve the content you had before.

110
00:06:17,090 --> 00:06:22,520
But we can use this when we're trying to update a heading or a caption or if we just know that there's

111
00:06:22,520 --> 00:06:25,490
not content inside that we're going to lose.

112
00:06:25,490 --> 00:06:31,730
Now, there's also a second property we can use to access the inner text or the text content of an element,

113
00:06:31,730 --> 00:06:34,580
and that property is called text content.

114
00:06:34,610 --> 00:06:38,900
So on the surface it seems exactly the same as inner text.

115
00:06:38,900 --> 00:06:43,880
If we select the H one again, I'm going to scroll up, I refresh the page, by the way.

116
00:06:43,880 --> 00:06:46,700
So we lost the change when it said I'm hungry.

117
00:06:46,700 --> 00:06:53,420
But if I look at H one inner text, it's my web page, h one text content, which is the other property

118
00:06:53,420 --> 00:06:54,380
we're about to see.

119
00:06:54,770 --> 00:06:57,590
We get the same thing, so it seems like they both are identical.

120
00:06:57,590 --> 00:06:59,630
I can set text content.

121
00:06:59,630 --> 00:07:01,940
I'll change this to I am not hungry.

122
00:07:03,230 --> 00:07:06,320
And it updates, same as in our text.

123
00:07:06,320 --> 00:07:08,930
But now let's work with this paragraph here.

124
00:07:08,990 --> 00:07:14,030
This paragraph has an idea of main and for some reason it's spaced really oddly.

125
00:07:14,030 --> 00:07:16,340
Some of this stuff is on separate lines.

126
00:07:16,340 --> 00:07:20,240
Let's say that I'm going to leave that I'll indent this here.

127
00:07:20,270 --> 00:07:22,070
I'll add an extra return.

128
00:07:22,310 --> 00:07:25,100
Let's save I'll format it oddly like this.

129
00:07:25,310 --> 00:07:29,240
And I'm also going to add in a script tag.

130
00:07:29,240 --> 00:07:34,880
Not that you really should put a script tag inside of a paragraph, but I'm going to to illustrate something.

131
00:07:34,880 --> 00:07:36,920
I'll put a console.log here.

132
00:07:37,280 --> 00:07:38,930
Hello, everyone.

133
00:07:40,540 --> 00:07:41,650
And save.

134
00:07:41,890 --> 00:07:48,130
So now we have our formatted HTML or our formatted text with some weird returns and indentation, and

135
00:07:48,130 --> 00:07:49,780
then we have a script tag.

136
00:07:50,200 --> 00:07:51,700
Let's refresh the page.

137
00:07:51,850 --> 00:07:53,220
Let's select that paragraph.

138
00:07:53,230 --> 00:07:54,640
Here's our console.log.

139
00:07:54,640 --> 00:07:55,360
Hello, everyone.

140
00:07:55,360 --> 00:08:01,150
So we'll do a document query selector of the ID of main.

141
00:08:01,150 --> 00:08:04,760
We could also do get element by ID save this to a variable.

142
00:08:04,760 --> 00:08:07,780
I'll call it p and let's look at P, enter text.

143
00:08:08,530 --> 00:08:08,920
Okay.

144
00:08:08,980 --> 00:08:10,870
So it's purely the text.

145
00:08:10,870 --> 00:08:11,950
No formatting.

146
00:08:11,950 --> 00:08:13,810
We don't get anything about that script.

147
00:08:13,810 --> 00:08:15,250
It's just the text.

148
00:08:15,610 --> 00:08:18,010
Now if we look at P text content.

149
00:08:19,760 --> 00:08:20,480
Okay.

150
00:08:20,480 --> 00:08:23,890
So it has the same text, but it also has that spacing.

151
00:08:23,900 --> 00:08:26,330
It knows about the returns we had in there.

152
00:08:26,750 --> 00:08:28,850
It knows about this script text.

153
00:08:28,850 --> 00:08:34,789
So it doesn't include the script element or the tags, but the text in there is considered text.

154
00:08:34,789 --> 00:08:41,570
So that's probably not ideal most of the time at least, and we end up getting it all with text content.

155
00:08:41,570 --> 00:08:43,370
So that is a significant difference.

156
00:08:43,640 --> 00:08:51,590
Also, if I had something that was hidden in this paragraph, a good example would be if I added a bold

157
00:08:51,590 --> 00:08:54,170
tag maybe or a span or some other tag.

158
00:08:54,170 --> 00:08:58,190
Let's do a bold tag around some of this content like that.

159
00:08:58,190 --> 00:09:03,590
And then let's say for some reason I decide to do an inline style just to make it easier.

160
00:09:03,680 --> 00:09:05,180
I'll say display none.

161
00:09:05,750 --> 00:09:09,920
So we should not see this phrase here, whatever percentage.

162
00:09:09,920 --> 00:09:10,370
Mm.

163
00:09:10,820 --> 00:09:12,440
Autumn, autumn.

164
00:09:12,470 --> 00:09:14,510
If I refresh, it's gone.

165
00:09:14,510 --> 00:09:16,220
We don't see it showing up here.

166
00:09:16,400 --> 00:09:21,020
But if I run those same lines, I select P, I look at inner text.

167
00:09:21,200 --> 00:09:22,400
It's not here.

168
00:09:23,370 --> 00:09:26,250
Now if I did the same thing with text content.

169
00:09:27,060 --> 00:09:29,760
It's right here presented atom.

170
00:09:29,880 --> 00:09:31,530
Same thing with our console.log.

171
00:09:31,560 --> 00:09:36,720
So inner text is going to be aware of what is actually showing up on the page.

172
00:09:36,780 --> 00:09:39,530
For example, our script text does not show up.

173
00:09:39,540 --> 00:09:46,740
Nobody sees this in the browser window unless they open up the inspector or the dev tools versus with

174
00:09:46,740 --> 00:09:47,700
text content.

175
00:09:47,730 --> 00:09:48,950
It doesn't care at all.

176
00:09:48,960 --> 00:09:54,240
It just gives us the inner text of that element from the actual HTML file.

177
00:09:54,480 --> 00:09:59,070
It goes into this element and it just takes all the text, all the text it can find.

178
00:09:59,070 --> 00:10:02,190
It cuts out those tags, cuts out the B tag, cuts out this.

179
00:10:02,190 --> 00:10:04,620
And we get the text, including the script text.

180
00:10:04,620 --> 00:10:06,600
So I almost always use inner text.

181
00:10:07,170 --> 00:10:09,720
It's good to know though, that text content is faster.

182
00:10:10,050 --> 00:10:13,020
Another one of those situations where it really doesn't matter.

183
00:10:13,020 --> 00:10:14,990
But you know, I feel like I should say it.

184
00:10:15,000 --> 00:10:16,440
It's such a tiny difference.

185
00:10:16,440 --> 00:10:21,120
Most of the time it would be imperceptible, but the reason it's faster is because it doesn't have to

186
00:10:21,120 --> 00:10:26,250
do any of this stuff where it calculates what's actually showing what's on the screen right now.

187
00:10:26,280 --> 00:10:28,320
It just gives you everything.

188
00:10:28,320 --> 00:10:29,310
It vomits it out.

189
00:10:29,310 --> 00:10:31,500
So that's inner text and text content.

190
00:10:31,500 --> 00:10:36,660
You can use both of them to access the text, but there are some differences, as we saw, and you can

191
00:10:36,660 --> 00:10:39,480
use either to update the text within an element.

192
00:10:39,480 --> 00:10:40,590
You just have to be careful.

193
00:10:40,590 --> 00:10:46,710
If there's other stuff in there and you update it using either one, you're going to overwrite what

194
00:10:46,710 --> 00:10:47,730
was there before.

195
00:10:47,820 --> 00:10:48,270
All right.

196
00:10:48,270 --> 00:10:50,250
So those are two new properties.

197
00:10:50,250 --> 00:10:51,870
Enter text and text content.

